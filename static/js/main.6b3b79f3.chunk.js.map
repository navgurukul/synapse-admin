{"version":3,"sources":["synapse/authProvider.js","synapse/dataProvider.js","components/users.js","components/rooms.js","components/LoginPage.js","i18n/de.js","App.js","i18n/en.js","index.js"],"names":["authProvider","login","base_url","username","password","console","log","options","method","body","JSON","stringify","type","user","localStorage","setItem","login_api_url","window","decodeURIComponent","fetchUtils","fetchJson","then","json","home_server","user_id","access_token","device_id","logout","removeItem","Promise","resolve","checkError","status","reject","checkAuth","getItem","getPermissions","jsonClient","url","token","authenticated","c_to_id","user_name","resource","indexOf","resourceMap","users","path","map","u","id","name","split","slice","is_guest","admin","deactivated","data","total","from","perPage","next_token","parseInt","length","create","endpoint","delete","erase","rooms","r","room_id","alias","canonical_alias","members","joined_members","total_rooms","connections","c","filterNullValues","key","value","dataProvider","getList","params","filter","guests","pagination","page","query","limit","homeserver","res","endpoint_url","getOne","getMany","all","ids","responses","getManyReference","sort","field","order","range","target","headers","get","pop","update","updateMany","threepids","email","push","msisdn","del","deleteMany","UserPagination","props","Pagination","rowsPerPageOptions","UserFilter","Filter","BooleanInput","source","alwaysOn","label","UserBulkActionButtons","translate","useTranslate","BulkDeleteButton","title","UserList","List","filters","filterDefaultValues","bulkActionButtons","Datagrid","rowClick","ReferenceField","reference","link","sortable","ImageField","TextField","BooleanField","validateUser","regex","validateEmail","UserEditToolbar","Toolbar","SaveButton","submitOnEnter","DeleteButton","UserCreate","Create","SimpleForm","TextInput","autoComplete","validate","PasswordInput","UserTitle","record","displayname","UserEdit","Edit","TabbedForm","toolbar","FormTab","icon","disabled","helperText","ArrayInput","SimpleFormIterator","SelectInput","choices","addLabel","ArrayField","style","width","DateField","showTime","year","month","day","hour","minute","second","RoomPagination","RoomList","useStyles","makeStyles","theme","main","display","flexDirection","minHeight","alignItems","justifyContent","background","backgroundColor","backgroundRepeat","backgroundSize","card","minWidth","marginTop","avatar","margin","palette","secondary","hint","color","grey","form","padding","input","actions","LoginPage","classes","useLogin","notify","useNotify","useState","loading","setLoading","renderInput","meta","touched","error","inputProps","fullWidth","UserData","formData","useForm","className","autoFocus","component","onBlur","_","match","extractHomeServer","wellKnownUrl","change","catch","initialValues","onSubmit","auth","message","values","errors","render","handleSubmit","noValidate","Card","Avatar","FormDataConsumer","formDataProps","CardActions","Button","variant","button","CircularProgress","size","thickness","Notification","germanMessages","synapseadmin","welcome","username_error","protocol_error","url_error","invalid_user_id","resources","backtolist","fields","show_deactivated","avatar_url","medium","address","helper","deactivate","action","last_seen","ip","user_agent","ra","auth_check_error","toggle_hidden","toggle_visible","notification","notifiaction","logged_out","messages","de","en","englishMessages","i18nProvider","polyglotI18nProvider","locale","resolveBrowserLocale","App","Admin","loginPage","Resource","list","edit","UserIcon","RoomIcon","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6b3b79f3.chunk.js","sourcesContent":["import { fetchUtils } from \"react-admin\";\n\nconst authProvider = {\n  // called when the user attempts to log in\n  login: ({ base_url, username, password }) => {\n    console.log(\"login \");\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"m.login.password\",\n        user: username,\n        password: password,\n      }),\n    };\n\n    // use the base_url from login instead of the well_known entry from the\n    // server, since the admin might want to access the admin API via some\n    // private address\n    localStorage.setItem(\"base_url\", base_url);\n\n    const decoded_base_url = window.decodeURIComponent(base_url);\n    const login_api_url = decoded_base_url + \"/_matrix/client/r0/login\";\n\n    return fetchUtils.fetchJson(login_api_url, options).then(({ json }) => {\n      localStorage.setItem(\"home_server\", json.home_server);\n      localStorage.setItem(\"user_id\", json.user_id);\n      localStorage.setItem(\"access_token\", json.access_token);\n      localStorage.setItem(\"device_id\", json.device_id);\n    });\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    console.log(\"logout \");\n    localStorage.removeItem(\"access_token\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    console.log(\"checkError \" + status);\n    if (status === 401 || status === 403) {\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    const access_token = localStorage.getItem(\"access_token\");\n    console.log(\"checkAuth \" + access_token);\n    return typeof access_token == \"string\"\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\nimport { stringify } from \"query-string\";\n\n// Adds the access token to all requests\nconst jsonClient = (url, options = {}) => {\n  const token = localStorage.getItem(\"access_token\");\n  console.log(\"httpClient \" + url);\n  if (token != null) {\n    options.user = {\n      authenticated: true,\n      token: `Bearer ${token}`,\n    };\n  }\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst c_to_id = (user_name, resource) => {\n  if (user_name.indexOf('navgurukul.org')>-1)\n    return user_name;\n\n  if (resource === 'users')\n    return '@'+ user_name +':navgurukul.org';\n  else if (resource === 'rooms')\n    return '#' + user_name + ':navgurukul.org';\n\n  return user_name;\n}\n\nconst resourceMap = {\n  users: {\n    path: \"/_synapse/admin/v2/users\",\n    map: u => ({\n      ...u,\n      id: u.name.split(':')[0].slice(1),\n      is_guest: !!u.is_guest,\n      admin: !!u.admin,\n      deactivated: !!u.deactivated,\n    }),\n    data: \"users\",\n    total: (json, from, perPage) => {\n      return json.next_token\n        ? parseInt(json.next_token, 10) + perPage\n        : from + json.users.length;\n    },\n    create: data => ({\n      endpoint: `/_synapse/admin/v2/users/${data.id}`,\n      body: data,\n      method: \"PUT\",\n    }),\n    delete: id => ({\n      endpoint: `/_synapse/admin/v1/deactivate/${c_to_id(id, 'users')}`,\n      body: {\n        erase: true, \n        id: id\n      },\n      method: \"POST\",\n    }),\n  },\n  rooms: {\n    path: \"/_synapse/admin/v1/rooms\",\n    map: r => ({\n      ...r,\n      id: r.room_id,\n      alias: r.canonical_alias,\n      members: r.joined_members,\n    }),\n    data: \"rooms\",\n    total: json => {\n      return json.total_rooms;\n    },\n  },\n  connections: {\n    path: \"/_synapse/admin/v1/whois\",\n    map: c => ({\n      ...c,\n      id: c_to_id(c.user_id),\n    }),\n    data: \"connections\",\n  },\n};\n\nfunction filterNullValues(key, value) {\n  // Filtering out null properties\n  if (value === null) {\n    return undefined;\n  }\n  return value;\n}\n\nconst dataProvider = {\n  getList: (resource, params) => {\n    console.log(\"getList \" + resource);\n    const { user_id, guests, deactivated } = params.filter;\n    const { page, perPage } = params.pagination;\n    const from = (page - 1) * perPage;\n    const query = {\n      from: from,\n      limit: perPage,\n      user_id: user_id,\n      guests: guests,\n      deactivated: deactivated,\n    };\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ json }) => ({\n      data: json[res.data].map(res.map),\n      total: res.total(json, from, perPage),\n    }));\n  },\n\n  getOne: (resource, params) => {\n    console.log(\"getOne \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    params.id = c_to_id(params.id, resource);\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${params.id}`).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  getMany: (resource, params) => {\n    console.log(\"getMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(\n        id => {\n          console.log(id);\n          return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`)\n        }\n      )\n    ).then(responses => ({\n      data: responses.map(({ json }) => res.map(json)),\n    }));\n  },\n\n  getManyReference: (resource, params) => {\n    // FIXME\n    console.log(\"getManyReference \" + resource);\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id,\n      }),\n    };\n\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ headers, json }) => ({\n      data: json,\n      total: parseInt(headers.get(\"content-range\").split(\"/\").pop(), 10),\n    }));\n  },\n\n  update: (resource, params) => {\n    console.log(\"update \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${c_to_id(params.data.id, resource)}`, {\n      method: \"PUT\",\n      body: JSON.stringify(params.data, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  updateMany: (resource, params) => {\n    console.log(\"updateMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(id => jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`), {\n        method: \"PUT\",\n        body: JSON.stringify(params.data, filterNullValues),\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  create: (resource, params) => {\n    console.log(\"create \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (!(\"create\" in res)) return Promise.reject();\n\n    params.data.id = c_to_id(params.data.id, resource);\n    params.data.threepids=[];\n\n    if (params.data.email)\n      params.data.threepids.push({\"medium\": \"email\", \"address\": params.data.email})\n\n    if (params.data.msisdn)\n      params.data.threepids.push({\"medium\": \"msisdn\", \"address\": params.data.msisdn})\n\n    const create = res[\"create\"](params.data);\n    const endpoint_url = homeserver + create.endpoint;\n    return jsonClient(endpoint_url, {\n      method: create.method,\n      body: JSON.stringify(create.body, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  delete: (resource, params) => {\n    console.log(\"delete \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      const del = res[\"delete\"](params.id);\n      const endpoint_url = homeserver + del.endpoint;\n\n      console.log(23, del.body);\n\n      return jsonClient(endpoint_url, {\n        method: del.method,\n        body: JSON.stringify(del.body),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    } else {\n      console.log(12, params);\n      const endpoint_url = homeserver + res.path;\n      return jsonClient(`${endpoint_url}/${params.id}`, {\n        method: \"DELETE\",\n        body: JSON.stringify(params.data, filterNullValues),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    }\n  },\n\n  deleteMany: (resource, params) => {\n    console.log(\"deleteMany \" + resource, params);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      return Promise.all(\n        params.ids.map(id => {\n          const del = res[\"delete\"](id);\n          const endpoint_url = homeserver + del.endpoint;\n          console.log(endpoint_url);\n          return jsonClient(endpoint_url, {\n            method: del.method,\n            body: JSON.stringify(del.body),\n          });\n        })\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    } else {\n      const endpoint_url = homeserver + res.path;\n      console.log(endpoint_url);\n      return Promise.all(\n        params.ids.map(id => {\n            console.log(id);\n            return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`, {\n              method: \"DELETE\",\n              body: JSON.stringify(params.data, filterNullValues),\n            })\n          }\n        )\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    }\n  },\n};\n\nexport default dataProvider;\n","import React, { Fragment } from \"react\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport {\n  ArrayInput,\n  ArrayField,\n  Datagrid,\n  DateField,\n  Create,\n  Edit,\n  List,\n  Filter,\n  Toolbar,\n  SimpleForm,\n  SimpleFormIterator,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  BooleanInput,\n  ImageField,\n  PasswordInput,\n  TextField,\n  TextInput,\n  ReferenceField,\n  SelectInput,\n  BulkDeleteButton,\n  DeleteButton,\n  SaveButton,\n  regex,\n  useTranslate,\n  Pagination,\n} from \"react-admin\";\n\nconst UserPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst UserFilter = props => (\n  <Filter {...props}>\n    <BooleanInput source=\"guests\" alwaysOn />\n    <BooleanInput\n      label=\"resources.users.fields.show_deactivated\"\n      source=\"deactivated\"\n      alwaysOn\n    />\n  </Filter>\n);\n\nconst UserBulkActionButtons = props => {\n  const translate = useTranslate();\n  return (\n    <Fragment>\n      <BulkDeleteButton\n        {...props}\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n    </Fragment>\n  );\n};\n\nexport const UserList = props => (\n  <List\n    {...props}\n    filters={<UserFilter />}\n    filterDefaultValues={{ guests: true, deactivated: false }}\n    bulkActionButtons={<UserBulkActionButtons />}\n    pagination={<UserPagination />}\n  >\n    <Datagrid rowClick=\"edit\">\n      <ReferenceField\n        source=\"Avatar\"\n        reference=\"users\"\n        link={false}\n        sortable={false}\n      >\n        <ImageField source=\"avatar_url\" title=\"displayname\" />\n      </ReferenceField>\n      <TextField source=\"id\" />\n      {/* Hack since the users endpoint does not give displaynames in the list*/}\n      <ReferenceField\n        source=\"name\"\n        reference=\"users\"\n        link={false}\n        sortable={false}\n      >\n        <TextField source=\"displayname\" />\n      </ReferenceField>\n      <BooleanField source=\"is_guest\" sortable={false} />\n      <BooleanField source=\"admin\" sortable={false} />\n      <BooleanField source=\"deactivated\" sortable={false} />\n    </Datagrid>\n  </List>\n);\n\n// https://matrix.org/docs/spec/appendices#user-identifiers\nconst validateUser = regex(\n  /^[a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/]+/,\n  \"synapseadmin.users.invalid_user_id\"\n);\n\nconst validateEmail = regex(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\\.+([a-zA-Z0-9-][a-zA-Z0-9-]+)*$/,\n  \"Enter Proper Email Address\"  \n);\n\nconst UserEditToolbar = props => {\n  const translate = useTranslate();\n  return (\n    <Toolbar {...props}>\n      <SaveButton submitOnEnter={true} />\n      <DeleteButton\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n    </Toolbar>\n  );\n};\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" autoComplete=\"off\" validate={validateUser} />\n      <TextInput source=\"displayname\" />\n      <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n      <BooleanInput source=\"admin\" />\n      <TextInput source=\"email\" autoComplete=\"off\" validate={validateEmail}/>\n      <TextInput source=\"msisdn\" autoComplete=\"off\" />\n      {/* <ArrayInput source=\"threepids\">\n        <SimpleFormIterator>\n          <SelectInput\n            source=\"medium\"\n            choices={[\n              { id: \"email\", name: \"resources.users.email\" },\n              { id: \"msisdn\", name: \"resources.users.msisdn\" },\n            ]}\n            key=\"SelectInput\"\n          />\n          <TextInput source=\"address\" key=\"TextInput\"/>\n        </SimpleFormIterator>\n      </ArrayInput> */}\n    </SimpleForm>\n  </Create>\n);\n\nconst UserTitle = ({ record }) => {\n  const translate = useTranslate();\n  return (\n    <span>\n      {translate(\"resources.users.name\")}{\" \"}\n      {record ? `\"${record.displayname}\"` : \"\"}\n    </span>\n  );\n};\nexport const UserEdit = props => (\n  <Edit {...props} title={<UserTitle />}>\n    <TabbedForm toolbar={<UserEditToolbar />}>\n      <FormTab label=\"resources.users.name\" icon={<PersonPinIcon />}>\n        <TextInput source=\"id\" disabled />\n        <TextInput source=\"displayname\" />\n        <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n \n        <BooleanInput source=\"admin\" />\n        <BooleanInput\n          source=\"deactivated\"\n          helperText=\"resources.users.helper.deactivate\"\n        />\n\n        <ArrayInput source=\"threepids\">\n          <SimpleFormIterator>\n            <SelectInput\n              source=\"medium\"\n              choices={[\n                { id: \"email\", name: \"resources.users.email\" },\n                { id: \"msisdn\", name: \"resources.users.msisdn\" },\n              ]}\n              key=\"SelectInput\"\n            />\n            <TextInput source=\"address\" key=\"TextInput\" />\n          </SimpleFormIterator>\n        </ArrayInput>\n      </FormTab>\n      <FormTab\n        label=\"resources.connections.name\"\n        icon={<SettingsInputComponentIcon />}\n      >\n        <ReferenceField reference=\"connections\" source=\"id\" addLabel={false}>\n          <ArrayField\n            source=\"devices[].sessions[0].connections\"\n            label=\"resources.connections.name\"\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"ip\" sortable={false} />\n              <DateField\n                source=\"last_seen\"\n                showTime\n                options={{\n                  year: \"numeric\",\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                }}\n                sortable={false}\n              />\n              <TextField\n                source=\"user_agent\"\n                sortable={false}\n                style={{ width: \"100%\" }}\n              />\n            </Datagrid>\n          </ArrayField>\n        </ReferenceField>\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n","import React from \"react\";\nimport { Datagrid, List, TextField, Pagination } from \"react-admin\";\n\nconst RoomPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nexport const RoomList = props => (\n  <List {...props} pagination={<RoomPagination />}>\n    <Datagrid>\n      <TextField source=\"room_id\" />\n      <TextField source=\"name\" />\n      <TextField source=\"canonical_alias\" />\n      <TextField source=\"joined_members\" />\n    </Datagrid>\n  </List>\n);\n","import React, { useState } from \"react\";\nimport {\n  fetchUtils,\n  FormDataConsumer,\n  Notification,\n  useLogin,\n  useNotify,\n  // useLocale,\n  // useSetLocale,\n  useTranslate,\n  PasswordInput,\n  TextInput,\n} from \"react-admin\";\nimport { Form, useForm } from \"react-final-form\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CircularProgress,\n  // MenuItem,\n  // Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    background: \"url(./images/floating-cogs.svg)\",\n    backgroundColor: \"#f9f9f9\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  card: {\n    minWidth: \"30em\",\n    marginTop: \"6em\",\n  },\n  avatar: {\n    margin: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  hint: {\n    marginTop: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.grey[500],\n  },\n  form: {\n    padding: \"0 1em 1em 1em\",\n  },\n  input: {\n    marginTop: \"1em\",\n  },\n  actions: {\n    padding: \"0 1em 1em 1em\",\n  },\n}));\n\nconst LoginPage = ({ theme }) => {\n  const classes = useStyles({ theme });\n  const login = useLogin();\n  const notify = useNotify();\n  const [loading, setLoading] = useState(false);\n  // var locale = useLocale();\n  // const setLocale = useSetLocale();\n  const translate = useTranslate();\n  const base_url = \"https://m.navgurukul.org\";\n\n  const renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n  }) => (\n    <TextField\n      error={!!(touched && error)}\n      helperText={touched && error}\n      {...inputProps}\n      {...props}\n      fullWidth\n    />\n  );\n\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = translate(\"ra.validation.required\");\n    }\n    if (!values.password) {\n      errors.password = translate(\"ra.validation.required\");\n    }\n    if (!values.base_url) {\n      errors.base_url = translate(\"ra.validation.required\");\n    } else {\n      if (!values.base_url.match(/^(http|https):\\/\\//)) {\n        errors.base_url = translate(\"synapseadmin.auth.protocol_error\");\n      } else if (\n        !values.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+(:\\d{1,5})?$/)\n      ) {\n        errors.base_url = translate(\"synapseadmin.auth.url_error\");\n      }\n    }\n    return errors;\n  };\n\n  const handleSubmit = auth => {\n    setLoading(true);\n    login(auth).catch(error => {\n      setLoading(false);\n      notify(\n        typeof error === \"string\"\n          ? error\n          : typeof error === \"undefined\" || !error.message\n          ? \"ra.auth.sign_in_error\"\n          : error.message,\n        \"warning\"\n      );\n    });\n  };\n\n  const extractHomeServer = username => {\n    const usernameRegex = /@[a-zA-Z0-9._=\\-/]+:([a-zA-Z0-9\\-.]+\\.[a-zA-Z]+)/;\n    if (!username) return null;\n    const res = username.match(usernameRegex);\n    if (res) return res[1];\n    return null;\n  };\n\n  const UserData = ({ formData }) => {\n\n    const form = useForm();\n\n    const handleUsernameChange = _ => {\n      if (formData.base_url) return;\n      // check if username is a full qualified userId then set base_url accordially\n      const home_server = extractHomeServer(formData.username);\n      const wellKnownUrl = `https://${home_server}/.well-known/matrix/client`;\n      if (home_server) {\n        // fetch .well-known entry to get base_url\n        fetchUtils\n          .fetchJson(wellKnownUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            form.change(\"base_url\", json[\"m.homeserver\"].base_url);\n          })\n          .catch(_ => {\n            // if there is no .well-known entry, try the home server name\n            form.change(\"base_url\", `https://${home_server}`);\n          });\n      }\n    };\n\n    return (\n      <div>\n        <div className={classes.input}>\n          <TextInput\n            autoFocus\n            name=\"username\"\n            component={renderInput}\n            label={translate(\"ra.auth.username\")}\n            disabled={loading}\n            onBlur={handleUsernameChange}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <PasswordInput\n            name=\"password\"\n            component={renderInput}\n            label={translate(\"ra.auth.password\")}\n            type=\"password\"\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <TextInput\n            name=\"base_url\"\n            component={renderInput}\n            label={translate(\"synapseadmin.auth.base_url\")}\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Form\n      initialValues={{ base_url: base_url }}\n      onSubmit={handleSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className={classes.main}>\n            <Card className={classes.card}>\n              <div className={classes.avatar}>\n                <Avatar className={classes.icon}>\n                  <LockIcon />\n                </Avatar>\n              </div>\n              <div className={classes.hint}>\n                {translate(\"synapseadmin.auth.welcome\")}\n              </div>\n              <div className={classes.form}>\n                <FormDataConsumer>\n                  {formDataProps => <UserData {...formDataProps} />}\n                </FormDataConsumer>\n              </div>\n              <CardActions className={classes.actions}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.button}\n                  fullWidth\n                >\n                  {loading && <CircularProgress size={25} thickness={2} />}\n                  {translate(\"ra.auth.sign_in\")}\n                </Button>\n              </CardActions>\n            </Card>\n            <Notification />\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default LoginPage;\n","import germanMessages from \"ra-language-german\";\n\nexport default {\n  ...germanMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"Heimserver URL\",\n      welcome: \"Willkommen bei Synapse-admin\",\n      username_error: \"Bitte vollständigen Nutzernamen angeben: '@user:domain'\",\n      protocol_error: \"Die URL muss mit 'http://' oder 'https://' beginnen\",\n      url_error: \"Keine gültige Matrix Server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Muss eine vollständige Matrix Benutzer-ID sein, z.B. @benutzer_id:homeserver\",\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Zurück zur Liste\",\n      name: \"Benutzer\",\n      email: \"E-Mail\",\n      msisdn: \"Telefon\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"Benutzer-ID\",\n        name: \"Name\",\n        is_guest: \"Gast\",\n        admin: \"Admin\",\n        deactivated: \"Deaktiviert\",\n        guests: \"Zeige Gäste\",\n        show_deactivated: \"Zeige deaktivierte Benutzer\",\n        user_id: \"Suche Benutzer\",\n        displayname: \"Anzeigename\",\n        password: \"Passwort\",\n        avatar_url: \"Avatar URL\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Adresse\",\n      },\n      helper: {\n        deactivate: \"Deaktivierte Nutzer können nicht wieder aktiviert werden.\",\n        erase: \"DSGVO konformes Löschen der Benutzerdaten\",\n      },\n      action: {\n        erase: \"Lösche Benutzerdaten\",\n      },\n    },\n    rooms: {\n      name: \"Raum |||| Räume\",\n      fields: {\n        room_id: \"Raum-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Mitglieder\",\n      },\n    },\n    connections: {\n      name: \"Verbindungen\",\n      fields: {\n        last_seen: \"Datum\",\n        ip: \"IP-Adresse\",\n        user_agent: \"User Agent\",\n      },\n    },\n  },\n  ra: {\n    ...germanMessages.ra,\n    auth: {\n      ...germanMessages.ra.auth,\n      auth_check_error: \"Anmeldung fehlgeschlagen\",\n    },\n    input: {\n      ...germanMessages.ra.input,\n      password: {\n        ...germanMessages.ra.input.password,\n        toggle_hidden: \"Anzeigen\",\n        toggle_visible: \"Verstecken\",\n      },\n    },\n    notification: {\n      ...germanMessages.ra.notifiaction,\n      logged_out: \"Abgemeldet\",\n    },\n  },\n};\n","import React from \"react\";\nimport { Admin, Resource, resolveBrowserLocale } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport authProvider from \"./synapse/authProvider\";\nimport dataProvider from \"./synapse/dataProvider\";\nimport { UserList, UserCreate, UserEdit } from \"./components/users\";\nimport { RoomList } from \"./components/rooms\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport { ViewListIcon as RoomIcon } from \"@material-ui/icons/ViewList\";\nimport germanMessages from \"./i18n/de\";\nimport englishMessages from \"./i18n/en\";\n\n// TODO: Can we use lazy loading together with browser locale?\nconst messages = {\n  de: germanMessages,\n  en: englishMessages,\n};\nconst i18nProvider = polyglotI18nProvider(\n  locale => (messages[locale] ? messages[locale] : messages.en),\n  resolveBrowserLocale()\n);\n\nconst App = () => (\n  <Admin\n    loginPage={LoginPage}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n    i18nProvider={i18nProvider}\n  >\n    <Resource\n      name=\"users\"\n      list={UserList}\n      create={UserCreate}\n      edit={UserEdit}\n      icon={UserIcon}\n    />\n    <Resource name=\"rooms\" list={RoomList} icon={RoomIcon} />\n    <Resource name=\"connections\" />\n  </Admin>\n);\n\nexport default App;\n","import englishMessages from \"ra-language-english\";\n\nexport default {\n  ...englishMessages,\n  synapseadmin: {\n    auth: {\n      homeserver: \"Homeserver\",\n      welcome: \"Welcome to Navgurukul Admin\",\n      base_url: \"Homeserver URL\",\n      username_error: \"Please enter fully qualified user ID: '@user:domain'\",\n      protocol_error: \"URL has to start with 'http://' or 'https://'\",\n      url_error: \"Not a valid Matrix server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Please enter a proper username.\",\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Back to list\",\n      name: \"User |||| Users\",\n      email: \"Email\",\n      msisdn: \"Phone\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"User-ID\",\n        name: \"Name\",\n        is_guest: \"Guest\",\n        admin: \"Admin\",\n        deactivated: \"Deactivated\",\n        guests: \"Show guests\",\n        show_deactivated: \"Show deactivated members\",\n        user_id: \"Search Member\",\n        displayname: \"Displayname\",\n        password: \"Password\",\n        avatar_url: \"Avatar URL\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Address\",\n      },\n      helper: {\n        deactivate: \"Deactivated members cannot be reactivated\",\n        erase: \"Mark the member as GDPR-erased\",\n      },\n      action: {\n        erase: \"Erase member data\",\n      },\n    },\n    rooms: {\n      name: \"Room |||| Rooms\",\n      fields: {\n        room_id: \"Room-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Members\",\n      },\n    },\n    connections: {\n      name: \"Connections\",\n      fields: {\n        last_seen: \"Date\",\n        ip: \"IP address\",\n        user_agent: \"User agent\",\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}