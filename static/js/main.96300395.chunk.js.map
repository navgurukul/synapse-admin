{"version":3,"sources":["synapse/authProvider.js","synapse/dataProvider.js","components/ServerNotices.js","components/devices.js","components/users.js","components/rooms.js","components/LoginPage.js","i18n/de.js","App.js","i18n/en.js","index.js"],"names":["authProvider","login","base_url","username","password","console","log","options","method","body","JSON","stringify","type","user","localStorage","setItem","login_api_url","window","decodeURIComponent","fetchUtils","fetchJson","then","json","home_server","user_id","access_token","device_id","logout","removeItem","Promise","resolve","checkError","status","reject","checkAuth","getItem","getPermissions","jsonClient","url","token","authenticated","c_to_id","user_name","resource","indexOf","mxcUrlToHttp","mxcUrl","homeserver","ret","exec","serverName","mediaId","resourceMap","users","path","map","u","id","name","split","slice","avatar_src","avatar_url","is_guest","admin","deactivated","creation_ts_ms","creation_ts","data","total","create","endpoint","delete","params","erase","rooms","r","room_id","alias","canonical_alias","members","joined_members","is_encrypted","encryption","federatable","public","total_rooms","devices","d","reference","connections","c","room_members","m","servernotices","n","event_id","content","msgtype","filterNullValues","key","value","getSearchOrder","order","dataProvider","getList","filter","guests","pagination","page","perPage","sort","field","from","query","limit","order_by","dir","res","endpoint_url","getOne","getMany","all","ids","responses","getManyReference","headers","update","updateMany","threepids","email","push","msisdn","createMany","cre","del","deleteMany","ServerNoticeDialog","open","loading","onClose","onSend","translate","useTranslate","ServerNoticeToolbar","props","Toolbar","SaveButton","label","Button","onClick","Dialog","DialogTitle","DialogContent","DialogContentText","SimpleForm","toolbar","submitOnEnter","redirect","save","TextInput","source","fullWidth","multiline","rows","resettable","validate","required","ServerNoticeButton","record","useState","setOpen","notify","useNotify","useCreate","handleDialogClose","disabled","values","payload","onSuccess","onFailure","ServerNoticeBulkButton","selectedIds","unselectAll","useUnselectAll","useMutation","error","useStyles","makeStyles","theme","deleteButton","color","palette","main","backgroundColor","fade","DeviceRemoveButton","classes","refresh","useRefresh","removeDevice","className","classnames","Confirm","isOpen","onConfirm","title","translateOptions","display_name","small","height","width","large","float","UserListActions","currentSort","filters","displayedFilters","exporter","filterValues","permanentFilter","basePath","hasCreate","showFilter","onUnselectItems","maxResults","rest","TopToolbar","sanitizeListRestProps","cloneElement","context","CreateButton","ExportButton","UserPagination","Pagination","rowsPerPageOptions","UserFilter","Filter","BooleanInput","alwaysOn","UserBulkActionButtons","BulkDeleteButton","AvatarField","Avatar","src","UserList","List","filterDefaultValues","actions","bulkActionButtons","Datagrid","rowClick","sortable","TextField","BooleanField","validateUser","regex","validateEmail","UserEditToolbar","DeleteButton","UserCreate","Create","autoComplete","PasswordInput","UserTitle","smart_count","displayname","UserEdit","Edit","TabbedForm","FormTab","icon","helperText","DateField","showTime","year","month","day","hour","minute","second","ArrayInput","SimpleFormIterator","SelectInput","choices","ReferenceManyField","target","addLabel","style","ReferenceField","link","ArrayField","RoomPagination","EncryptionField","emptyText","get","ariaLabel","Typography","component","variant","Tooltip","_","data-testid","htmlColor","RoomTitle","RoomShow","Show","TabbedShowLayout","Tab","SelectField","RoomFilter","Chip","defaultValue","marginBottom","RoomList","connect","state","roomfilters","resources","list","localMembersFilter","joined_local_members","stateEventsFilter","state_events","versionFilter","version","federateableFilter","sortBy","display","flexDirection","minHeight","alignItems","justifyContent","background","backgroundRepeat","backgroundSize","card","minWidth","marginTop","avatar","margin","secondary","hint","grey","form","padding","input","serverVersion","fontFamily","marginLeft","LoginPage","useLogin","setLoading","renderInput","meta","touched","inputProps","UserData","formData","useForm","setServerVersion","useEffect","match","versionUrl","catch","autoFocus","onBlur","extractHomeServer","wellKnownUrl","change","initialValues","onSubmit","auth","message","errors","render","handleSubmit","noValidate","Card","FormDataConsumer","formDataProps","CardActions","button","CircularProgress","size","thickness","Notification","germanMessages","synapseadmin","welcome","server_version","username_error","protocol_error","url_error","invalid_user_id","details","tabs","basic","detail","permission","backtolist","threepid","fields","show_deactivated","medium","address","consent_version","last_seen_ts","last_seen_ip","helper","deactivate","action","creator","join_rules","guest_access","history_visibility","enums","knock","invite","private","can_join","forbidden","invited","joined","shared","world_readable","unencrypted","last_seen","ip","user_agent","success","failure","send","send_success","send_failure","ra","auth_check_error","toggle_hidden","toggle_visible","notification","notifiaction","logged_out","messages","de","en","englishMessages","i18nProvider","polyglotI18nProvider","locale","resolveBrowserLocale","App","Admin","loginPage","Resource","edit","UserIcon","show","RoomIcon","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.96300395.chunk.js","sourcesContent":["import { fetchUtils } from \"react-admin\";\n\nconst authProvider = {\n  // called when the user attempts to log in\n  login: ({ base_url, username, password }) => {\n    console.log(\"login \");\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"m.login.password\",\n        user: username,\n        password: password,\n      }),\n    };\n\n    // use the base_url from login instead of the well_known entry from the\n    // server, since the admin might want to access the admin API via some\n    // private address\n    localStorage.setItem(\"base_url\", base_url);\n\n    const decoded_base_url = window.decodeURIComponent(base_url);\n    const login_api_url = decoded_base_url + \"/_matrix/client/r0/login\";\n\n    return fetchUtils.fetchJson(login_api_url, options).then(({ json }) => {\n      localStorage.setItem(\"home_server\", json.home_server);\n      localStorage.setItem(\"user_id\", json.user_id);\n      localStorage.setItem(\"access_token\", json.access_token);\n      localStorage.setItem(\"device_id\", json.device_id);\n    });\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    console.log(\"logout \");\n    localStorage.removeItem(\"access_token\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    console.log(\"checkError \" + status);\n    if (status === 401 || status === 403) {\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    const access_token = localStorage.getItem(\"access_token\");\n    console.log(\"checkAuth \" + access_token);\n    return typeof access_token == \"string\"\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\nimport { stringify } from \"query-string\";\n\n// Adds the access token to all requests\nconst jsonClient = (url, options = {}) => {\n  const token = localStorage.getItem(\"access_token\");\n  console.log(\"httpClient \" + url);\n  if (token != null) {\n    options.user = {\n      authenticated: true,\n      token: `Bearer ${token}`,\n    };\n  }\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst c_to_id = (user_name, resource) => {\n  if (user_name.indexOf('navgurukul.org')>-1)\n    return user_name;\n\n  if (resource === 'users' || resource=== \"connections\")\n    return '@'+ user_name +':navgurukul.org';\n  else if (resource === 'rooms')\n    return '#' + user_name + ':navgurukul.org';\n\n  return user_name;\n}\nconst mxcUrlToHttp = mxcUrl => {\n  const homeserver = localStorage.getItem(\"base_url\");\n  const re = /^mxc:\\/\\/([^/]+)\\/(\\w+)/;\n  var ret = re.exec(mxcUrl);\n  console.log(\"mxcClient \" + ret);\n  if (ret == null) return null;\n  const serverName = ret[1];\n  const mediaId = ret[2];\n  return `${homeserver}/_matrix/media/r0/thumbnail/${serverName}/${mediaId}?width=24&height=24&method=scale`;\n};\n\nconst resourceMap = {\n  users: {\n    path: \"/_synapse/admin/v2/users\",\n    map: u => ({\n      ...u,\n      id: u.name.split(':')[0].slice(1),\n      avatar_src: mxcUrlToHttp(u.avatar_url),\n      is_guest: !!u.is_guest,\n      admin: !!u.admin,\n      deactivated: !!u.deactivated,\n      // need timestamp in milliseconds\n      creation_ts_ms: u.creation_ts * 1000,\n    }),\n    data: \"users\",\n    total: json => json.total,\n    create: data => ({\n      endpoint: `/_synapse/admin/v2/users/${data.id}`,\n      body: data,\n      method: \"PUT\",\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/deactivate/${c_to_id(params.id, 'users')}`,\n      body: { erase: true },\n      method: \"POST\",\n    }),\n  },\n  rooms: {\n    path: \"/_synapse/admin/v1/rooms\",\n    map: r => ({\n      ...r,\n      id: r.room_id,\n      alias: r.canonical_alias,\n      members: r.joined_members,\n      is_encrypted: !!r.encryption,\n      federatable: !!r.federatable,\n      public: !!r.public,\n    }),\n    data: \"rooms\",\n    total: json => {\n      return json.total_rooms;\n    },\n  },\n  devices: {\n    map: d => ({\n      ...d,\n      id: d.device_id,\n    }),\n    data: \"devices\",\n    reference: id => ({\n      endpoint: `/_synapse/admin/v2/users/${id}/devices`,\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v2/users/${params.user_id}/devices/${params.id}`,\n    }),\n  },\n  connections: {\n    path: \"/_synapse/admin/v1/whois\",\n    map: c => ({\n      ...c,\n      id: c_to_id(c.user_id),\n    }),\n    data: \"connections\",\n  },\n  room_members: {\n    map: m => ({\n      id: m,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/rooms/${id}/members`,\n    }),\n    data: \"members\",\n  },\n  servernotices: {\n    map: n => ({ id: n.event_id }),\n    create: data => ({\n      endpoint: \"/_synapse/admin/v1/send_server_notice\",\n      body: {\n        user_id: data.id,\n        content: {\n          msgtype: \"m.text\",\n          body: data.body,\n        },\n      },\n      method: \"POST\",\n    }),\n  },\n};\n\nfunction filterNullValues(key, value) {\n  // Filtering out null properties\n  if (value === null) {\n    return undefined;\n  }\n  return value;\n}\n\nfunction getSearchOrder(order) {\n  if (order === \"DESC\") {\n    return \"b\";\n  } else {\n    return \"f\";\n  }\n}\n\nconst dataProvider = {\n  getList: (resource, params) => {\n    console.log(\"getList \" + resource);\n    const { user_id, guests, deactivated } = params.filter;\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const from = (page - 1) * perPage;\n    const query = {\n      from: from,\n      limit: perPage,\n      user_id: user_id,\n      guests: guests,\n      deactivated: deactivated,\n      order_by: field,\n      dir: getSearchOrder(order),\n    };\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ json }) => ({\n      data: json[res.data].map(res.map),\n      total: res.total(json, from, perPage),\n    }));\n  },\n\n  getOne: (resource, params) => {\n    console.log(\"getOne \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    params.id = c_to_id(params.id, resource);\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${params.id}`).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  getMany: (resource, params) => {\n    console.log(\"getMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(\n        id => {\n          console.log(id);\n          return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`)\n        }\n      )\n    ).then(responses => ({\n      data: responses.map(({ json }) => res.map(json)),\n    }));\n  },\n\n  getManyReference: (resource, params) => {\n    console.log(\"getManyReference \" + resource);\n\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const ref = res[\"reference\"](params.id);\n    const endpoint_url = homeserver + ref.endpoint;\n\n    return jsonClient(endpoint_url).then(({ headers, json }) => ({\n      data: json[res.data].map(res.map),\n    }));\n  },\n\n  update: (resource, params) => {\n    console.log(\"update \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${c_to_id(params.data.id, resource)}`, {\n      method: \"PUT\",\n      body: JSON.stringify(params.data, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  updateMany: (resource, params) => {\n    console.log(\"updateMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(id => jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`), {\n        method: \"PUT\",\n        body: JSON.stringify(params.data, filterNullValues),\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  create: (resource, params) => {\n    console.log(\"create \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (!(\"create\" in res)) return Promise.reject();\n\n    params.data.id = c_to_id(params.data.id, resource);\n    params.data.threepids=[];\n\n    if (params.data.email)\n      params.data.threepids.push({\"medium\": \"email\", \"address\": params.data.email})\n\n    if (params.data.msisdn)\n      params.data.threepids.push({\"medium\": \"msisdn\", \"address\": params.data.msisdn})\n\n    const create = res[\"create\"](params.data);\n    const endpoint_url = homeserver + create.endpoint;\n    return jsonClient(endpoint_url, {\n      method: create.method,\n      body: JSON.stringify(create.body, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  createMany: (resource, params) => {\n    console.log(\"createMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    if (!(\"create\" in res)) return Promise.reject();\n\n    return Promise.all(\n      params.ids.map(id => {\n        params.data.id = id;\n        const cre = res[\"create\"](params.data);\n        const endpoint_url = homeserver + cre.endpoint;\n        return jsonClient(endpoint_url, {\n          method: cre.method,\n          body: JSON.stringify(cre.body, filterNullValues),\n        });\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  delete: (resource, params) => {\n    console.log(\"delete \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      const del = res[\"delete\"](params);\n      const endpoint_url = homeserver + del.endpoint;\n\n      console.log(23, del.body);\n\n      return jsonClient(endpoint_url, {\n        method: \"method\" in del ? del.method : \"DELETE\",\n        body: \"body\" in del ? JSON.stringify(del.body) : null,\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    } else {\n      console.log(12, params);\n      const endpoint_url = homeserver + res.path;\n      return jsonClient(`${endpoint_url}/${params.id}`, {\n        method: \"DELETE\",\n        body: JSON.stringify(params.data, filterNullValues),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    }\n  },\n\n  deleteMany: (resource, params) => {\n    console.log(\"deleteMany \" + resource, params);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      return Promise.all(\n        params.ids.map(id => {\n          const del = res[\"delete\"]({ ...params, id: id });\n          const endpoint_url = homeserver + del.endpoint;\n          console.log(endpoint_url);\n          return jsonClient(endpoint_url, {\n            method: \"method\" in del ? del.method : \"DELETE\",\n            body: \"body\" in del ? JSON.stringify(del.body) : null,\n          });\n        })\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    } else {\n      const endpoint_url = homeserver + res.path;\n      console.log(endpoint_url);\n      return Promise.all(\n        params.ids.map(id => {\n            console.log(id);\n            return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`, {\n              method: \"DELETE\",\n              body: JSON.stringify(params.data, filterNullValues),\n            })\n          }\n        )\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    }\n  },\n};\n\nexport default dataProvider;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  SaveButton,\n  SimpleForm,\n  TextInput,\n  Toolbar,\n  required,\n  useCreate,\n  useMutation,\n  useNotify,\n  useTranslate,\n  useUnselectAll,\n} from \"react-admin\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ServerNoticeDialog = ({ open, loading, onClose, onSend }) => {\n  const translate = useTranslate();\n\n  const ServerNoticeToolbar = props => (\n    <Toolbar {...props}>\n      <SaveButton label=\"resources.servernotices.action.send\" />\n      <Button label=\"ra.action.cancel\" onClick={onClose}>\n        <IconCancel />\n      </Button>\n    </Toolbar>\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} loading={loading}>\n      <DialogTitle>\n        {translate(\"resources.servernotices.action.send\")}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"resources.servernotices.helper.send\")}\n        </DialogContentText>\n        <SimpleForm\n          toolbar={<ServerNoticeToolbar />}\n          submitOnEnter={false}\n          redirect={false}\n          save={onSend}\n        >\n          <TextInput\n            source=\"body\"\n            label=\"resources.servernotices.fields.body\"\n            fullWidth\n            multiline\n            rows=\"4\"\n            resettable\n            validate={required()}\n          />\n        </SimpleForm>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const ServerNoticeButton = ({ record }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const [create, { loading }] = useCreate(\"servernotices\");\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    create(\n      { payload: { data: { id: record.id, ...values } } },\n      {\n        onSuccess: () => {\n          notify(\"resources.servernotices.action.send_success\");\n          handleDialogClose();\n        },\n        onFailure: () =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n\nexport const ServerNoticeBulkButton = ({ selectedIds }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const [createMany, { loading }] = useMutation();\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    createMany(\n      {\n        type: \"createMany\",\n        resource: \"servernotices\",\n        payload: { ids: selectedIds, data: values },\n      },\n      {\n        onSuccess: ({ data }) => {\n          notify(\"resources.servernotices.action.send_success\");\n          unselectAll(\"users\");\n          handleDialogClose();\n        },\n        onFailure: error =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  useMutation,\n  useNotify,\n  Confirm,\n  useRefresh,\n} from \"react-admin\";\nimport ActionDelete from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles(\n  theme => ({\n    deleteButton: {\n      color: theme.palette.error.main,\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        \"@media (hover: none)\": {\n          backgroundColor: \"transparent\",\n        },\n      },\n    },\n  }),\n  { name: \"RaDeleteDeviceButton\" }\n);\n\nexport const DeviceRemoveButton = props => {\n  const { record } = props;\n  const classes = useStyles(props);\n  const [open, setOpen] = useState(false);\n  const refresh = useRefresh();\n  const notify = useNotify();\n\n  const [removeDevice, { loading }] = useMutation();\n\n  if (!record) return null;\n\n  const handleClick = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleConfirm = () => {\n    removeDevice(\n      {\n        type: \"delete\",\n        resource: \"devices\",\n        payload: {\n          id: record.id,\n          user_id: record.user_id,\n        },\n      },\n      {\n        onSuccess: () => {\n          notify(\"resources.devices.action.erase.success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.devices.action.erase.failure\", \"error\"),\n      }\n    );\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"ra.action.remove\"\n        onClick={handleClick}\n        className={classnames(\"ra-delete-button\", classes.deleteButton)}\n      >\n        <ActionDelete />\n      </Button>\n      <Confirm\n        isOpen={open}\n        loading={loading}\n        onConfirm={handleConfirm}\n        onClose={handleDialogClose}\n        title=\"resources.devices.action.erase.title\"\n        content=\"resources.devices.action.erase.content\"\n        translateOptions={{\n          id: record.id,\n          name: record.display_name ? record.display_name : record.id,\n        }}\n      />\n    </Fragment>\n  );\n};\n","import React, { cloneElement, Fragment } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport {\n  ArrayInput,\n  ArrayField,\n  Datagrid,\n  DateField,\n  Create,\n  Edit,\n  List,\n  Filter,\n  Toolbar,\n  SimpleForm,\n  SimpleFormIterator,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  BooleanInput,\n  PasswordInput,\n  TextField,\n  TextInput,\n  ReferenceField,\n  ReferenceManyField,\n  SelectInput,\n  BulkDeleteButton,\n  DeleteButton,\n  SaveButton,\n  regex,\n  useTranslate,\n  Pagination,\n  CreateButton,\n  ExportButton,\n  TopToolbar,\n  sanitizeListRestProps,\n} from \"react-admin\";\nimport { ServerNoticeButton, ServerNoticeBulkButton } from \"./ServerNotices\";\nimport { DeviceRemoveButton } from \"./devices\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  small: {\n    height: \"40px\",\n    width: \"40px\",\n  },\n  large: {\n    height: \"120px\",\n    width: \"120px\",\n    float: \"right\",\n  },\n});\n\nconst UserListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  ...rest\n}) => (\n  <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n    {filters &&\n      cloneElement(filters, {\n        resource,\n        showFilter,\n        displayedFilters,\n        filterValues,\n        context: \"button\",\n      })}\n    <CreateButton basePath={basePath} />\n    <ExportButton\n      disabled={total === 0}\n      resource={resource}\n      sort={currentSort}\n      filter={{ ...filterValues, ...permanentFilter }}\n      exporter={exporter}\n      maxResults={maxResults}\n    />\n  </TopToolbar>\n);\n\nconst UserPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst UserFilter = props => (\n  <Filter {...props}>\n    <BooleanInput source=\"guests\" alwaysOn />\n    <BooleanInput\n      label=\"resources.users.fields.show_deactivated\"\n      source=\"deactivated\"\n      alwaysOn\n    />\n  </Filter>\n);\n\nconst UserBulkActionButtons = props => {\n  const translate = useTranslate();\n  return (\n    <Fragment>\n      <ServerNoticeBulkButton {...props} />\n      <BulkDeleteButton\n        {...props}\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n    </Fragment>\n  );\n};\n\nconst AvatarField = ({ source, className, record = {} }) => (\n  <Avatar src={record[source]} className={className} />\n);\n\nexport const UserList = props => {\n  const classes = useStyles();\n  return (\n    <List\n      {...props}\n      filters={<UserFilter />}\n      filterDefaultValues={{ guests: true, deactivated: false }}\n      actions={<UserListActions maxResults={10000} />}\n      bulkActionButtons={<UserBulkActionButtons />}\n      pagination={<UserPagination />}\n    >\n      <Datagrid rowClick=\"edit\">\n        <AvatarField\n          source=\"avatar_src\"\n          sortable={false}\n          className={classes.small}\n        />\n        <TextField source=\"id\" sortable={false} />\n        <TextField source=\"displayname\" sortable={false} />\n        <BooleanField source=\"is_guest\" sortable={false} />\n        <BooleanField source=\"admin\" sortable={false} />\n        <BooleanField source=\"deactivated\" sortable={false} />\n      </Datagrid>\n    </List>\n  );\n};\n\n// https://matrix.org/docs/spec/appendices#user-identifiers\nconst validateUser = regex(\n  /^[a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/]+/,\n  \"synapseadmin.users.invalid_user_id\"\n);\n\nconst validateEmail = regex(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\\.+([a-zA-Z0-9-][a-zA-Z0-9-]+)*$/,\n  \"Enter Proper Email Address\"  \n);\n\nconst UserEditToolbar = props => {\n  const translate = useTranslate();\n  return (\n    <Toolbar {...props}>\n      <SaveButton submitOnEnter={true} />\n      <DeleteButton\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n      <ServerNoticeButton />\n    </Toolbar>\n  );\n};\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" autoComplete=\"off\" validate={validateUser} />\n      <TextInput source=\"displayname\" />\n      <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n      <BooleanInput source=\"admin\" />\n      <TextInput source=\"email\" autoComplete=\"off\" validate={validateEmail}/>\n      <TextInput source=\"msisdn\" autoComplete=\"off\" />\n      {/* <ArrayInput source=\"threepids\">\n        <SimpleFormIterator>\n          <SelectInput\n            source=\"medium\"\n            choices={[\n              { id: \"email\", name: \"resources.users.email\" },\n              { id: \"msisdn\", name: \"resources.users.msisdn\" },\n            ]}\n            key=\"SelectInput\"\n          />\n          <TextInput source=\"address\" key=\"TextInput\"/>\n        </SimpleFormIterator>\n      </ArrayInput> */}\n    </SimpleForm>\n  </Create>\n);\n\nconst UserTitle = ({ record }) => {\n  const translate = useTranslate();\n  return (\n    <span>\n      {translate(\"resources.users.name\", {\n        smart_count: 1,\n      })}{\" \"}\n      {record ? `\"${record.displayname}\"` : \"\"}\n    </span>\n  );\n};\nexport const UserEdit = props => {\n  const classes = useStyles();\n  const translate = useTranslate();\n  return (\n    <Edit {...props} title={<UserTitle />}>\n      <TabbedForm toolbar={<UserEditToolbar />}>\n        <FormTab\n          label={translate(\"resources.users.name\", { smart_count: 1 })}\n          icon={<PersonPinIcon />}\n        >\n          <AvatarField\n            source=\"avatar_src\"\n            sortable={false}\n            className={classes.large}\n          />\n          <TextInput source=\"id\" disabled />\n          <TextInput source=\"displayname\" />\n          <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n          <BooleanInput source=\"admin\" />\n          <BooleanInput\n            source=\"deactivated\"\n            helperText=\"resources.users.helper.deactivate\"\n          />\n          <DateField\n            source=\"creation_ts_ms\"\n            showTime\n            options={{\n              year: \"numeric\",\n              month: \"2-digit\",\n              day: \"2-digit\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              second: \"2-digit\",\n            }}\n          />\n          <TextField source=\"consent_version\" />\n        </FormTab>\n        <FormTab\n          label=\"resources.users.threepid\"\n          icon={<ContactMailIcon />}\n          path=\"threepid\"\n        >\n          <ArrayInput source=\"threepids\">\n            <SimpleFormIterator>\n              <SelectInput\n                source=\"medium\"\n                choices={[\n                  { id: \"email\", name: \"resources.users.email\" },\n                  { id: \"msisdn\", name: \"resources.users.msisdn\" },\n                ]}\n                key=\"SelectInput\"\n              />\n              <TextInput source=\"address\" key=\"TextInput\"/>\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n        <FormTab\n          label={translate(\"resources.devices.name\", { smart_count: 2 })}\n          icon={<DevicesIcon />}\n          path=\"devices\"\n        >\n          <ReferenceManyField\n            reference=\"devices\"\n            target=\"user_id\"\n            addLabel={false}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"device_id\" sortable={false} />\n              <TextField source=\"display_name\" sortable={false} />\n              <TextField source=\"last_seen_ip\" sortable={false} />\n              <DateField\n                source=\"last_seen_ts\"\n                showTime\n                options={{\n                  year: \"numeric\",\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                }}\n                sortable={false}\n              />\n              <DeviceRemoveButton />\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n        <FormTab\n          label=\"resources.connections.name\"\n          icon={<SettingsInputComponentIcon />}\n          path=\"connections\"\n        >\n          <ReferenceField\n            reference=\"connections\"\n            source=\"id\"\n            addLabel={false}\n            link={false}\n          >\n            <ArrayField\n              source=\"devices[].sessions[0].connections\"\n              label=\"resources.connections.name\"\n            >\n              <Datagrid style={{ width: \"100%\" }}>\n                <TextField source=\"ip\" sortable={false} />\n                <DateField\n                  source=\"last_seen\"\n                  showTime\n                  options={{\n                    year: \"numeric\",\n                    month: \"2-digit\",\n                    day: \"2-digit\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    second: \"2-digit\",\n                  }}\n                  sortable={false}\n                />\n                <TextField\n                  source=\"user_agent\"\n                  sortable={false}\n                  style={{ width: \"100%\" }}\n                />\n              </Datagrid>\n            </ArrayField>\n          </ReferenceField>\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BooleanField,\n  Datagrid,\n  Filter,\n  List,\n  Pagination,\n  ReferenceField,\n  ReferenceManyField,\n  SelectField,\n  Show,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useTranslate,\n} from \"react-admin\";\nimport get from \"lodash/get\";\nimport { Tooltip, Typography, Chip } from \"@material-ui/core\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport NoEncryptionIcon from \"@material-ui/icons/NoEncryption\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nconst RoomPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst EncryptionField = ({ source, record = {}, emptyText }) => {\n  const translate = useTranslate();\n  const value = get(record, source);\n  let ariaLabel = value === false ? \"ra.boolean.false\" : \"ra.boolean.true\";\n\n  if (value === false || value === true) {\n    return (\n      <Typography component=\"span\" variant=\"body2\">\n        <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n          {value === true ? (\n            <HttpsIcon data-testid=\"true\" htmlColor=\"limegreen\" />\n          ) : (\n            <NoEncryptionIcon data-testid=\"false\" color=\"error\" />\n          )}\n        </Tooltip>\n      </Typography>\n    );\n  }\n\n  return (\n    <Typography component=\"span\" variant=\"body2\">\n      {emptyText}\n    </Typography>\n  );\n};\n\nconst RoomTitle = ({ record }) => {\n  const translate = useTranslate();\n  var name = \"\";\n  if (record) {\n    name = record.name !== \"\" ? record.name : record.id;\n  }\n\n  return (\n    <span>\n      {translate(\"resources.rooms.name\", 1)} {name}\n    </span>\n  );\n};\n\nexport const RoomShow = props => {\n  const translate = useTranslate();\n  return (\n    <Show {...props} title={<RoomTitle />}>\n      <TabbedShowLayout>\n        <Tab label=\"synapseadmin.rooms.tabs.basic\" icon={<ViewListIcon />}>\n          <TextField source=\"room_id\" />\n          <TextField source=\"name\" />\n          <TextField source=\"canonical_alias\" />\n          <TextField source=\"creator\" />\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.detail\"\n          icon={<PageviewIcon />}\n          path=\"detail\"\n        >\n          <TextField source=\"joined_members\" />\n          <TextField source=\"joined_local_members\" />\n          <TextField source=\"state_events\" />\n          <TextField source=\"version\" />\n          <TextField\n            source=\"encryption\"\n            emptyText={translate(\"resources.rooms.enums.unencrypted\")}\n          />\n        </Tab>\n\n        <Tab label=\"synapseadmin.rooms.tabs.members\" icon={<UserIcon />}>\n          <ReferenceManyField\n            reference=\"room_members\"\n            target=\"room_id\"\n            addLabel={false}\n          >\n            <Datagrid\n              style={{ width: \"100%\" }}\n              rowClick={(id, basePath, record) => \"/users/\" + id}\n            >\n              <TextField\n                source=\"id\"\n                sortable={false}\n                label=\"resources.users.fields.id\"\n              />\n              <ReferenceField\n                label=\"resources.users.fields.displayname\"\n                source=\"id\"\n                reference=\"users\"\n                sortable={false}\n                link=\"\"\n              >\n                <TextField source=\"displayname\" sortable={false} />\n              </ReferenceField>\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.permission\"\n          icon={<VisibilityIcon />}\n          path=\"permission\"\n        >\n          <BooleanField source=\"federatable\" />\n          <BooleanField source=\"public\" />\n          <SelectField\n            source=\"join_rules\"\n            choices={[\n              { id: \"public\", name: \"resources.rooms.enums.join_rules.public\" },\n              { id: \"knock\", name: \"resources.rooms.enums.join_rules.knock\" },\n              { id: \"invite\", name: \"resources.rooms.enums.join_rules.invite\" },\n              {\n                id: \"private\",\n                name: \"resources.rooms.enums.join_rules.private\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"guest_access\"\n            choices={[\n              {\n                id: \"can_join\",\n                name: \"resources.rooms.enums.guest_access.can_join\",\n              },\n              {\n                id: \"forbidden\",\n                name: \"resources.rooms.enums.guest_access.forbidden\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"history_visibility\"\n            choices={[\n              {\n                id: \"invited\",\n                name: \"resources.rooms.enums.history_visibility.invited\",\n              },\n              {\n                id: \"joined\",\n                name: \"resources.rooms.enums.history_visibility.joined\",\n              },\n              {\n                id: \"shared\",\n                name: \"resources.rooms.enums.history_visibility.shared\",\n              },\n              {\n                id: \"world_readable\",\n                name: \"resources.rooms.enums.history_visibility.world_readable\",\n              },\n            ]}\n          />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\nconst RoomFilter = ({ ...props }) => {\n  const translate = useTranslate();\n  return (\n    <Filter {...props}>\n      <Chip\n        label={translate(\"resources.rooms.fields.joined_local_members\")}\n        source=\"joined_local_members\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.state_events\")}\n        source=\"state_events\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.version\")}\n        source=\"version\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.federatable\")}\n        source=\"federatable\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n    </Filter>\n  );\n};\n\nconst FilterableRoomList = ({ ...props }) => {\n  const filter = props.roomfilters;\n  const localMembersFilter =\n    filter && filter.joined_local_members ? true : false;\n  const stateEventsFilter = filter && filter.state_events ? true : false;\n  const versionFilter = filter && filter.version ? true : false;\n  const federateableFilter = filter && filter.federatable ? true : false;\n\n  return (\n    <List\n      {...props}\n      pagination={<RoomPagination />}\n      sort={{ field: \"name\", order: \"ASC\" }}\n      filters={<RoomFilter />}\n    >\n      <Datagrid rowClick=\"show\">\n        <EncryptionField\n          source=\"is_encrypted\"\n          sortBy=\"encryption\"\n          label={<HttpsIcon />}\n        />\n        <TextField source=\"name\" />\n        <TextField source=\"joined_members\" />\n        {localMembersFilter && <TextField source=\"joined_local_members\" />}\n        {stateEventsFilter && <TextField source=\"state_events\" />}\n        {versionFilter && <TextField source=\"version\" />}\n        {federateableFilter && <BooleanField source=\"federatable\" />}\n        <BooleanField source=\"public\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomfilters: state.admin.resources.rooms.list.params.displayedFilters,\n  };\n}\n\nexport const RoomList = connect(mapStateToProps)(FilterableRoomList);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchUtils,\n  FormDataConsumer,\n  Notification,\n  useLogin,\n  useNotify,\n  // useLocale,\n  // useSetLocale,\n  useTranslate,\n  PasswordInput,\n  TextInput,\n} from \"react-admin\";\nimport { Form, useForm } from \"react-final-form\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CircularProgress,\n  // MenuItem,\n  // Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"calc(100vh - 1em)\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    background: \"url(./images/floating-cogs.svg)\",\n    backgroundColor: \"#f9f9f9\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  card: {\n    minWidth: \"30em\",\n    marginTop: \"6em\",\n    marginBottom: \"6em\",\n  },\n  avatar: {\n    margin: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  hint: {\n    marginTop: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.grey[500],\n  },\n  form: {\n    padding: \"0 1em 1em 1em\",\n  },\n  input: {\n    marginTop: \"1em\",\n  },\n  actions: {\n    padding: \"0 1em 1em 1em\",\n  },\n  serverVersion: {\n    color: \"#9e9e9e\",\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    marginBottom: \"1em\",\n    marginLeft: \"0.5em\",\n  },\n}));\n\nconst LoginPage = ({ theme }) => {\n  const classes = useStyles({ theme });\n  const login = useLogin();\n  const notify = useNotify();\n  const [loading, setLoading] = useState(false);\n  // var locale = useLocale();\n  // const setLocale = useSetLocale();\n  const translate = useTranslate();\n  const base_url = \"https://m.navgurukul.org\";\n\n  const renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n  }) => (\n    <TextField\n      error={!!(touched && error)}\n      helperText={touched && error}\n      {...inputProps}\n      {...props}\n      fullWidth\n    />\n  );\n\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = translate(\"ra.validation.required\");\n    }\n    if (!values.password) {\n      errors.password = translate(\"ra.validation.required\");\n    }\n    if (!values.base_url) {\n      errors.base_url = translate(\"ra.validation.required\");\n    } else {\n      if (!values.base_url.match(/^(http|https):\\/\\//)) {\n        errors.base_url = translate(\"synapseadmin.auth.protocol_error\");\n      } else if (\n        !values.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+(:\\d{1,5})?$/)\n      ) {\n        errors.base_url = translate(\"synapseadmin.auth.url_error\");\n      }\n    }\n    return errors;\n  };\n\n  const handleSubmit = auth => {\n    setLoading(true);\n    login(auth).catch(error => {\n      setLoading(false);\n      notify(\n        typeof error === \"string\"\n          ? error\n          : typeof error === \"undefined\" || !error.message\n          ? \"ra.auth.sign_in_error\"\n          : error.message,\n        \"warning\"\n      );\n    });\n  };\n\n  const extractHomeServer = username => {\n    const usernameRegex = /@[a-zA-Z0-9._=\\-/]+:([a-zA-Z0-9\\-.]+\\.[a-zA-Z]+)/;\n    if (!username) return null;\n    const res = username.match(usernameRegex);\n    if (res) return res[1];\n    return null;\n  };\n\n  const UserData = ({ formData }) => {\n\n    const form = useForm();\n    const [serverVersion, setServerVersion] = useState(\"\");\n\n    const handleUsernameChange = _ => {\n      if (formData.base_url) return;\n      // check if username is a full qualified userId then set base_url accordially\n      const home_server = extractHomeServer(formData.username);\n      const wellKnownUrl = `https://${home_server}/.well-known/matrix/client`;\n      if (home_server) {\n        // fetch .well-known entry to get base_url\n        fetchUtils\n          .fetchJson(wellKnownUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            form.change(\"base_url\", json[\"m.homeserver\"].base_url);\n          })\n          .catch(_ => {\n            // if there is no .well-known entry, try the home server name\n            form.change(\"base_url\", `https://${home_server}`);\n          });\n      }\n    };\n\n    useEffect(\n      _ => {\n        if (\n          !formData.base_url ||\n          !formData.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+$/)\n        )\n          return;\n        const versionUrl = `${formData.base_url}/_synapse/admin/v1/server_version`;\n        fetchUtils\n          .fetchJson(versionUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            setServerVersion(\n              `${translate(\"synapseadmin.auth.server_version\")} ${\n                json[\"server_version\"]\n              }`\n            );\n          })\n          .catch(_ => {\n            setServerVersion(\"\");\n          });\n      },\n      [formData.base_url]\n    );\n\n    return (\n      <div>\n        <div className={classes.input}>\n          <TextInput\n            autoFocus\n            name=\"username\"\n            component={renderInput}\n            label={translate(\"ra.auth.username\")}\n            disabled={loading}\n            onBlur={handleUsernameChange}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <PasswordInput\n            name=\"password\"\n            component={renderInput}\n            label={translate(\"ra.auth.password\")}\n            type=\"password\"\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <TextInput\n            name=\"base_url\"\n            component={renderInput}\n            label={translate(\"synapseadmin.auth.base_url\")}\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n        <div className={classes.serverVersion}>{serverVersion}</div>\n      </div>\n    );\n  };\n\n  return (\n    <Form\n      initialValues={{ base_url: base_url }}\n      onSubmit={handleSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className={classes.main}>\n            <Card className={classes.card}>\n              <div className={classes.avatar}>\n                <Avatar className={classes.icon}>\n                  <LockIcon />\n                </Avatar>\n              </div>\n              <div className={classes.hint}>\n                {translate(\"synapseadmin.auth.welcome\")}\n              </div>\n              <div className={classes.form}>\n                <FormDataConsumer>\n                  {formDataProps => <UserData {...formDataProps} />}\n                </FormDataConsumer>\n              </div>\n              <CardActions className={classes.actions}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.button}\n                  fullWidth\n                >\n                  {loading && <CircularProgress size={25} thickness={2} />}\n                  {translate(\"ra.auth.sign_in\")}\n                </Button>\n              </CardActions>\n            </Card>\n            <Notification />\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default LoginPage;\n","import germanMessages from \"ra-language-german\";\n\nexport default {\n  ...germanMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"Heimserver URL\",\n      welcome: \"Willkommen bei Synapse-admin\",\n      server_version: \"Synapse Version\",\n      username_error: \"Bitte vollständigen Nutzernamen angeben: '@user:domain'\",\n      protocol_error: \"Die URL muss mit 'http://' oder 'https://' beginnen\",\n      url_error: \"Keine gültige Matrix Server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Muss eine vollständige Matrix Benutzer-ID sein, z.B. @benutzer_id:homeserver\",\n    },\n    rooms: {\n      details: \"Raumdetails\",\n      tabs: {\n        basic: \"Allgemein\",\n        members: \"Mitglieder\",\n        detail: \"Details\",\n        permission: \"Berechtigungen\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Zurück zur Liste\",\n      name: \"Benutzer\",\n      email: \"E-Mail\",\n      msisdn: \"Telefon\",\n      threepid: \"E-Mail / Telefon\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"Benutzer-ID\",\n        name: \"Name\",\n        is_guest: \"Gast\",\n        admin: \"Server Administrator\",\n        deactivated: \"Deaktiviert\",\n        guests: \"Zeige Gäste\",\n        show_deactivated: \"Zeige deaktivierte Benutzer\",\n        user_id: \"Suche Benutzer\",\n        displayname: \"Anzeigename\",\n        password: \"Passwort\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Adresse\",\n        creation_ts_ms: \"Zeitpunkt der Erstellung\",\n        consent_version: \"Zugestimmte Geschäftsbedingungen\",\n        // Devices:\n        device_id: \"Geräte-ID\",\n        display_name: \"Gerätename\",\n        last_seen_ts: \"Zeitstempel\",\n        last_seen_ip: \"IP-Adresse\",\n      },\n      helper: {\n        deactivate: \"Deaktivierte Nutzer können nicht wieder aktiviert werden.\",\n        erase: \"DSGVO konformes Löschen der Benutzerdaten\",\n      },\n      action: {\n        erase: \"Lösche Benutzerdaten\",\n      },\n    },\n    rooms: {\n      name: \"Raum |||| Räume\",\n      fields: {\n        room_id: \"Raum-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Mitglieder\",\n        joined_local_members: \"Lokale Mitglieder\",\n        state_events: \"Ereignisse\",\n        version: \"Version\",\n        is_encrypted: \"Verschlüsselt\",\n        encryption: \"Verschlüsselungs-Algorithmus\",\n        federatable: \"Fö­de­rierbar\",\n        public: \"Öffentlich\",\n        creator: \"Ersteller\",\n        join_rules: \"Beitrittsregeln\",\n        guest_access: \"Gastzugriff\",\n        history_visibility: \"Historie-Sichtbarkeit\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Öffentlich\",\n          knock: \"Auf Anfrage\",\n          invite: \"Nur auf Einladung\",\n          private: \"Privat\",\n        },\n        guest_access: {\n          can_join: \"Gäste können beitreten\",\n          forbidden: \"Gäste können nicht beitreten\",\n        },\n        history_visibility: {\n          invited: \"Ab Einladung\",\n          joined: \"Ab Beitritt\",\n          shared: \"Ab Setzen der Einstellung\",\n          world_readable: \"Jeder\",\n        },\n        unencrypted: \"Nicht verschlüsselt\",\n      },\n    },\n    connections: {\n      name: \"Verbindungen\",\n      fields: {\n        last_seen: \"Datum\",\n        ip: \"IP-Adresse\",\n        user_agent: \"User Agent\",\n      },\n    },\n    devices: {\n      name: \"Gerät |||| Geräte\",\n      action: {\n        erase: {\n          title: \"Entferne %{id}\",\n          content: 'Möchten Sie das Gerät \"%{name}\" wirklich entfernen?',\n          success: \"Gerät erfolgreich entfernt.\",\n          failure: \"Beim Entfernen ist ein Fehler aufgetreten.\",\n        },\n      },\n    },\n    servernotices: {\n      name: \"Serverbenachrichtigungen\",\n      send: \"Servernachricht versenden\",\n      fields: {\n        body: \"Nachricht\",\n      },\n      action: {\n        send: \"Sende Nachricht\",\n        send_success: \"Nachricht erfolgreich versendet.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n      helper: {\n        send:\n          'Sendet eine Serverbenachrichtigung an die ausgewählten Nutzer. Hierfür muss das Feature \"Server Notices\" auf dem Server aktiviert sein.',\n      },\n    },\n  },\n  ra: {\n    ...germanMessages.ra,\n    auth: {\n      ...germanMessages.ra.auth,\n      auth_check_error: \"Anmeldung fehlgeschlagen\",\n    },\n    input: {\n      ...germanMessages.ra.input,\n      password: {\n        ...germanMessages.ra.input.password,\n        toggle_hidden: \"Anzeigen\",\n        toggle_visible: \"Verstecken\",\n      },\n    },\n    notification: {\n      ...germanMessages.ra.notifiaction,\n      logged_out: \"Abgemeldet\",\n    },\n  },\n};\n","import React from \"react\";\nimport { Admin, Resource, resolveBrowserLocale } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport authProvider from \"./synapse/authProvider\";\nimport dataProvider from \"./synapse/dataProvider\";\nimport { UserList, UserCreate, UserEdit } from \"./components/users\";\nimport { RoomList, RoomShow } from \"./components/rooms\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport { ViewListIcon as RoomIcon } from \"@material-ui/icons/ViewList\";\nimport germanMessages from \"./i18n/de\";\nimport englishMessages from \"./i18n/en\";\n\n// TODO: Can we use lazy loading together with browser locale?\nconst messages = {\n  de: germanMessages,\n  en: englishMessages,\n};\nconst i18nProvider = polyglotI18nProvider(\n  locale => (messages[locale] ? messages[locale] : messages.en),\n  resolveBrowserLocale()\n);\n\nconst App = () => (\n  <Admin\n    loginPage={LoginPage}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n    i18nProvider={i18nProvider}\n  >\n    <Resource\n      name=\"users\"\n      list={UserList}\n      create={UserCreate}\n      edit={UserEdit}\n      icon={UserIcon}\n    />\n    <Resource name=\"rooms\" list={RoomList} show={RoomShow} icon={RoomIcon} />\n    <Resource name=\"connections\" />\n    <Resource name=\"devices\" />\n    <Resource name=\"room_members\" />\n    <Resource name=\"servernotices\" />\n  </Admin>\n);\n\nexport default App;\n","import englishMessages from \"ra-language-english\";\n\nexport default {\n  ...englishMessages,\n  synapseadmin: {\n    auth: {\n      homeserver: \"Homeserver\",\n      welcome: \"Welcome to Navgurukul Admin\",\n      base_url: \"Homeserver URL\",\n      username_error: \"Please enter fully qualified user ID: '@user:domain'\",\n      protocol_error: \"URL has to start with 'http://' or 'https://'\",\n      url_error: \"Not a valid Matrix server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Please enter a proper username.\",\n    },\n    rooms: {\n      tabs: {\n        basic: \"Basic\",\n        members: \"Members\",\n        detail: \"Details\",\n        permission: \"Permissions\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Back to list\",\n      name: \"User |||| Users\",\n      email: \"Email\",\n      msisdn: \"Phone\",\n      threepid: \"Email / Phone\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"User-ID\",\n        name: \"Name\",\n        is_guest: \"Guest\",\n        admin: \"Server Administrator\",\n        deactivated: \"Deactivated\",\n        guests: \"Show guests\",\n        show_deactivated: \"Show deactivated members\",\n        user_id: \"Search Member\",\n        displayname: \"Displayname\",\n        password: \"Password\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Address\",\n        creation_ts_ms: \"Creation timestamp\",\n        consent_version: \"Consent version\",\n        // Devices:\n        device_id: \"Device-ID\",\n        display_name: \"Device name\",\n        last_seen_ts: \"Timestamp\",\n        last_seen_ip: \"IP address\",\n      },\n      helper: {\n        deactivate: \"Deactivated members cannot be reactivated\",\n        erase: \"Mark the member as GDPR-erased\",\n      },\n      action: {\n        erase: \"Erase member data\",\n      },\n    },\n    rooms: {\n      name: \"Room |||| Rooms\",\n      fields: {\n        room_id: \"Room-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Members\",\n        joined_local_members: \"local members\",\n        state_events: \"State events\",\n        version: \"Version\",\n        is_encrypted: \"Encrypted\",\n        encryption: \"Encryption\",\n        federatable: \"Federatable\",\n        public: \"Public\",\n        creator: \"Creator\",\n        join_rules: \"Join rules\",\n        guest_access: \"Guest access\",\n        history_visibility: \"History visibility\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Public\",\n          knock: \"Knock\",\n          invite: \"Invite\",\n          private: \"Private\",\n        },\n        guest_access: {\n          can_join: \"Guests can join\",\n          forbidden: \"Guests can not join\",\n        },\n        history_visibility: {\n          invited: \"Since invited\",\n          joined: \"Since joined\",\n          shared: \"Since shared\",\n          world_readable: \"Anyone\",\n        },\n        unencrypted: \"Unencrypted\",\n      },\n    },\n    connections: {\n      name: \"Connections\",\n      fields: {\n        last_seen: \"Date\",\n        ip: \"IP address\",\n        user_agent: \"User agent\",\n      },\n    },\n    devices: {\n      name: \"Device |||| Devices\",\n      action: {\n        erase: {\n          title: \"Removing %{id}\",\n          content: 'Are you sure you want to remove the device \"%{name}\"?',\n          success: \"Device successfully removed.\",\n          failure: \"An error has occurred.\",\n        },\n      },\n    },\n    servernotices: {\n      name: \"Server Notices\",\n      send: \"Send server notices\",\n      fields: {\n        body: \"Message\",\n      },\n      action: {\n        send: \"Send note\",\n        send_success: \"Server notice successfully sent.\",\n        send_failure: \"An error has occurred.\",\n      },\n      helper: {\n        send:\n          'Sends a server notice to the selected users. The feature \"Server Notices\" has to be activated at the server.',\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}