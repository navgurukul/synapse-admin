{"version":3,"sources":["synapse/authProvider.js","synapse/dataProvider.js","components/ServerNotices.js","components/users.js","components/rooms.js","components/LoginPage.js","i18n/de.js","App.js","i18n/en.js","index.js"],"names":["authProvider","login","base_url","username","password","console","log","options","method","body","JSON","stringify","type","user","localStorage","setItem","login_api_url","window","decodeURIComponent","fetchUtils","fetchJson","then","json","home_server","user_id","access_token","device_id","logout","removeItem","Promise","resolve","checkError","status","reject","checkAuth","getItem","getPermissions","jsonClient","url","token","authenticated","c_to_id","user_name","resource","indexOf","mxcUrlToHttp","mxcUrl","homeserver","ret","exec","serverName","mediaId","resourceMap","users","path","map","u","id","name","split","slice","avatar_src","avatar_url","is_guest","admin","deactivated","creation_ts_ms","creation_ts","data","total","create","endpoint","delete","erase","rooms","r","room_id","alias","canonical_alias","members","joined_members","is_encrypted","encryption","federatable","public","total_rooms","connections","c","servernotices","n","event_id","content","msgtype","filterNullValues","key","value","getSearchOrder","order","dataProvider","getList","params","filter","guests","pagination","page","perPage","sort","field","from","query","limit","order_by","dir","res","endpoint_url","getOne","getMany","all","ids","responses","getManyReference","range","target","headers","parseInt","get","pop","update","updateMany","threepids","email","push","msisdn","createMany","cre","del","deleteMany","ServerNoticeDialog","open","loading","onClose","onSend","translate","useTranslate","ServerNoticeToolbar","props","Toolbar","SaveButton","label","Button","onClick","Dialog","DialogTitle","DialogContent","DialogContentText","SimpleForm","toolbar","submitOnEnter","redirect","save","TextInput","source","fullWidth","multiline","rows","resettable","validate","required","ServerNoticeButton","record","useState","setOpen","notify","useNotify","useCreate","handleDialogClose","disabled","values","payload","onSuccess","onFailure","ServerNoticeBulkButton","selectedIds","unselectAll","useUnselectAll","useMutation","error","useStyles","makeStyles","small","height","width","large","float","UserPagination","Pagination","rowsPerPageOptions","UserFilter","Filter","BooleanInput","alwaysOn","UserBulkActionButtons","BulkDeleteButton","title","AvatarField","className","Avatar","src","UserList","classes","List","filters","filterDefaultValues","bulkActionButtons","Datagrid","rowClick","sortable","TextField","BooleanField","validateUser","regex","validateEmail","UserEditToolbar","DeleteButton","UserCreate","Create","autoComplete","PasswordInput","UserTitle","smart_count","displayname","UserEdit","Edit","TabbedForm","FormTab","icon","helperText","DateField","showTime","year","month","day","hour","minute","second","ArrayInput","SimpleFormIterator","SelectInput","choices","ReferenceField","reference","addLabel","link","ArrayField","style","RoomPagination","EncryptionField","emptyText","ariaLabel","Typography","component","variant","Tooltip","_","data-testid","htmlColor","color","RoomTitle","RoomShow","Show","TabbedShowLayout","Tab","SelectField","RoomFilter","Chip","defaultValue","marginBottom","RoomList","connect","state","roomfilters","resources","list","displayedFilters","localMembersFilter","joined_local_members","stateEventsFilter","state_events","versionFilter","version","federateableFilter","sortBy","theme","main","display","flexDirection","minHeight","alignItems","justifyContent","background","backgroundColor","backgroundRepeat","backgroundSize","card","minWidth","marginTop","avatar","margin","palette","secondary","hint","grey","form","padding","input","actions","serverVersion","fontFamily","marginLeft","LoginPage","useLogin","setLoading","renderInput","meta","touched","inputProps","UserData","formData","useForm","setServerVersion","useEffect","match","versionUrl","catch","autoFocus","onBlur","extractHomeServer","wellKnownUrl","change","initialValues","onSubmit","auth","message","errors","render","handleSubmit","noValidate","Card","FormDataConsumer","formDataProps","CardActions","button","CircularProgress","size","thickness","Notification","germanMessages","synapseadmin","welcome","server_version","username_error","protocol_error","url_error","invalid_user_id","details","tabs","basic","detail","permission","backtolist","threepid","fields","show_deactivated","medium","address","consent_version","helper","deactivate","action","creator","join_rules","guest_access","history_visibility","enums","knock","invite","private","can_join","forbidden","invited","joined","shared","world_readable","unencrypted","last_seen","ip","user_agent","send","send_success","send_failure","ra","auth_check_error","toggle_hidden","toggle_visible","notification","notifiaction","logged_out","messages","de","en","englishMessages","i18nProvider","polyglotI18nProvider","locale","resolveBrowserLocale","App","Admin","loginPage","Resource","edit","UserIcon","show","RoomIcon","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf083d2a.chunk.js","sourcesContent":["import { fetchUtils } from \"react-admin\";\n\nconst authProvider = {\n  // called when the user attempts to log in\n  login: ({ base_url, username, password }) => {\n    console.log(\"login \");\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"m.login.password\",\n        user: username,\n        password: password,\n      }),\n    };\n\n    // use the base_url from login instead of the well_known entry from the\n    // server, since the admin might want to access the admin API via some\n    // private address\n    localStorage.setItem(\"base_url\", base_url);\n\n    const decoded_base_url = window.decodeURIComponent(base_url);\n    const login_api_url = decoded_base_url + \"/_matrix/client/r0/login\";\n\n    return fetchUtils.fetchJson(login_api_url, options).then(({ json }) => {\n      localStorage.setItem(\"home_server\", json.home_server);\n      localStorage.setItem(\"user_id\", json.user_id);\n      localStorage.setItem(\"access_token\", json.access_token);\n      localStorage.setItem(\"device_id\", json.device_id);\n    });\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    console.log(\"logout \");\n    localStorage.removeItem(\"access_token\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    console.log(\"checkError \" + status);\n    if (status === 401 || status === 403) {\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    const access_token = localStorage.getItem(\"access_token\");\n    console.log(\"checkAuth \" + access_token);\n    return typeof access_token == \"string\"\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\nimport { stringify } from \"query-string\";\n\n// Adds the access token to all requests\nconst jsonClient = (url, options = {}) => {\n  const token = localStorage.getItem(\"access_token\");\n  console.log(\"httpClient \" + url);\n  if (token != null) {\n    options.user = {\n      authenticated: true,\n      token: `Bearer ${token}`,\n    };\n  }\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst c_to_id = (user_name, resource) => {\n  if (user_name.indexOf('navgurukul.org')>-1)\n    return user_name;\n\n  if (resource === 'users' || resource=== \"connections\")\n    return '@'+ user_name +':navgurukul.org';\n  else if (resource === 'rooms')\n    return '#' + user_name + ':navgurukul.org';\n\n  return user_name;\n}\nconst mxcUrlToHttp = mxcUrl => {\n  const homeserver = localStorage.getItem(\"base_url\");\n  const re = /^mxc:\\/\\/([^/]+)\\/(\\w+)/;\n  var ret = re.exec(mxcUrl);\n  console.log(\"mxcClient \" + ret);\n  if (ret == null) return null;\n  const serverName = ret[1];\n  const mediaId = ret[2];\n  return `${homeserver}/_matrix/media/r0/thumbnail/${serverName}/${mediaId}?width=24&height=24&method=scale`;\n};\n\nconst resourceMap = {\n  users: {\n    path: \"/_synapse/admin/v2/users\",\n    map: u => ({\n      ...u,\n      id: u.name.split(':')[0].slice(1),\n      avatar_src: mxcUrlToHttp(u.avatar_url),\n      is_guest: !!u.is_guest,\n      admin: !!u.admin,\n      deactivated: !!u.deactivated,\n      // need timestamp in milliseconds\n      creation_ts_ms: u.creation_ts * 1000,\n    }),\n    data: \"users\",\n    total: json => json.total,\n    create: data => ({\n      endpoint: `/_synapse/admin/v2/users/${data.id}`,\n      body: data,\n      method: \"PUT\",\n    }),\n    delete: id => ({\n      endpoint: `/_synapse/admin/v1/deactivate/${c_to_id(id, 'users')}`,\n      body: {\n        erase: true, \n        id: id\n      },\n      method: \"POST\",\n    }),\n  },\n  rooms: {\n    path: \"/_synapse/admin/v1/rooms\",\n    map: r => ({\n      ...r,\n      id: r.room_id,\n      alias: r.canonical_alias,\n      members: r.joined_members,\n      is_encrypted: !!r.encryption,\n      federatable: !!r.federatable,\n      public: !!r.public,\n    }),\n    data: \"rooms\",\n    total: json => {\n      return json.total_rooms;\n    },\n  },\n  connections: {\n    path: \"/_synapse/admin/v1/whois\",\n    map: c => ({\n      ...c,\n      id: c_to_id(c.user_id),\n    }),\n    data: \"connections\",\n  },\n  servernotices: {\n    map: n => ({ id: n.event_id }),\n    create: data => ({\n      endpoint: \"/_synapse/admin/v1/send_server_notice\",\n      body: {\n        user_id: data.id,\n        content: {\n          msgtype: \"m.text\",\n          body: data.body,\n        },\n      },\n      method: \"POST\",\n    }),\n  },\n};\n\nfunction filterNullValues(key, value) {\n  // Filtering out null properties\n  if (value === null) {\n    return undefined;\n  }\n  return value;\n}\n\nfunction getSearchOrder(order) {\n  if (order === \"DESC\") {\n    return \"b\";\n  } else {\n    return \"f\";\n  }\n}\n\nconst dataProvider = {\n  getList: (resource, params) => {\n    console.log(\"getList \" + resource);\n    const { user_id, guests, deactivated } = params.filter;\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const from = (page - 1) * perPage;\n    const query = {\n      from: from,\n      limit: perPage,\n      user_id: user_id,\n      guests: guests,\n      deactivated: deactivated,\n      order_by: field,\n      dir: getSearchOrder(order),\n    };\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ json }) => ({\n      data: json[res.data].map(res.map),\n      total: res.total(json, from, perPage),\n    }));\n  },\n\n  getOne: (resource, params) => {\n    console.log(\"getOne \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    params.id = c_to_id(params.id, resource);\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${params.id}`).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  getMany: (resource, params) => {\n    console.log(\"getMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(\n        id => {\n          console.log(id);\n          return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`)\n        }\n      )\n    ).then(responses => ({\n      data: responses.map(({ json }) => res.map(json)),\n    }));\n  },\n\n  getManyReference: (resource, params) => {\n    // FIXME\n    console.log(\"getManyReference \" + resource);\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id,\n      }),\n    };\n\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ headers, json }) => ({\n      data: json,\n      total: parseInt(headers.get(\"content-range\").split(\"/\").pop(), 10),\n    }));\n  },\n\n  update: (resource, params) => {\n    console.log(\"update \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${c_to_id(params.data.id, resource)}`, {\n      method: \"PUT\",\n      body: JSON.stringify(params.data, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  updateMany: (resource, params) => {\n    console.log(\"updateMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(id => jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`), {\n        method: \"PUT\",\n        body: JSON.stringify(params.data, filterNullValues),\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  create: (resource, params) => {\n    console.log(\"create \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (!(\"create\" in res)) return Promise.reject();\n\n    params.data.id = c_to_id(params.data.id, resource);\n    params.data.threepids=[];\n\n    if (params.data.email)\n      params.data.threepids.push({\"medium\": \"email\", \"address\": params.data.email})\n\n    if (params.data.msisdn)\n      params.data.threepids.push({\"medium\": \"msisdn\", \"address\": params.data.msisdn})\n\n    const create = res[\"create\"](params.data);\n    const endpoint_url = homeserver + create.endpoint;\n    return jsonClient(endpoint_url, {\n      method: create.method,\n      body: JSON.stringify(create.body, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  createMany: (resource, params) => {\n    console.log(\"createMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    if (!(\"create\" in res)) return Promise.reject();\n\n    return Promise.all(\n      params.ids.map(id => {\n        params.data.id = id;\n        const cre = res[\"create\"](params.data);\n        const endpoint_url = homeserver + cre.endpoint;\n        return jsonClient(endpoint_url, {\n          method: cre.method,\n          body: JSON.stringify(cre.body, filterNullValues),\n        });\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  delete: (resource, params) => {\n    console.log(\"delete \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      const del = res[\"delete\"](params.id);\n      const endpoint_url = homeserver + del.endpoint;\n\n      console.log(23, del.body);\n\n      return jsonClient(endpoint_url, {\n        method: del.method,\n        body: JSON.stringify(del.body),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    } else {\n      console.log(12, params);\n      const endpoint_url = homeserver + res.path;\n      return jsonClient(`${endpoint_url}/${params.id}`, {\n        method: \"DELETE\",\n        body: JSON.stringify(params.data, filterNullValues),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    }\n  },\n\n  deleteMany: (resource, params) => {\n    console.log(\"deleteMany \" + resource, params);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      return Promise.all(\n        params.ids.map(id => {\n          const del = res[\"delete\"](id);\n          const endpoint_url = homeserver + del.endpoint;\n          console.log(endpoint_url);\n          return jsonClient(endpoint_url, {\n            method: del.method,\n            body: JSON.stringify(del.body),\n          });\n        })\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    } else {\n      const endpoint_url = homeserver + res.path;\n      console.log(endpoint_url);\n      return Promise.all(\n        params.ids.map(id => {\n            console.log(id);\n            return jsonClient(`${endpoint_url}/${c_to_id(id, resource)}`, {\n              method: \"DELETE\",\n              body: JSON.stringify(params.data, filterNullValues),\n            })\n          }\n        )\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    }\n  },\n};\n\nexport default dataProvider;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  SaveButton,\n  SimpleForm,\n  TextInput,\n  Toolbar,\n  required,\n  useCreate,\n  useMutation,\n  useNotify,\n  useTranslate,\n  useUnselectAll,\n} from \"react-admin\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ServerNoticeDialog = ({ open, loading, onClose, onSend }) => {\n  const translate = useTranslate();\n\n  const ServerNoticeToolbar = props => (\n    <Toolbar {...props}>\n      <SaveButton label=\"resources.servernotices.action.send\" />\n      <Button label=\"ra.action.cancel\" onClick={onClose}>\n        <IconCancel />\n      </Button>\n    </Toolbar>\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} loading={loading}>\n      <DialogTitle>\n        {translate(\"resources.servernotices.action.send\")}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"resources.servernotices.helper.send\")}\n        </DialogContentText>\n        <SimpleForm\n          toolbar={<ServerNoticeToolbar />}\n          submitOnEnter={false}\n          redirect={false}\n          save={onSend}\n        >\n          <TextInput\n            source=\"body\"\n            label=\"resources.servernotices.fields.body\"\n            fullWidth\n            multiline\n            rows=\"4\"\n            resettable\n            validate={required()}\n          />\n        </SimpleForm>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const ServerNoticeButton = ({ record }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const [create, { loading }] = useCreate(\"servernotices\");\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    create(\n      { payload: { data: { id: record.id, ...values } } },\n      {\n        onSuccess: () => {\n          notify(\"resources.servernotices.action.send_success\");\n          handleDialogClose();\n        },\n        onFailure: () =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n\nexport const ServerNoticeBulkButton = ({ selectedIds }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const [createMany, { loading }] = useMutation();\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    createMany(\n      {\n        type: \"createMany\",\n        resource: \"servernotices\",\n        payload: { ids: selectedIds, data: values },\n      },\n      {\n        onSuccess: ({ data }) => {\n          notify(\"resources.servernotices.action.send_success\");\n          unselectAll(\"users\");\n          handleDialogClose();\n        },\n        onFailure: error =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport {\n  ArrayInput,\n  ArrayField,\n  Datagrid,\n  DateField,\n  Create,\n  Edit,\n  List,\n  Filter,\n  Toolbar,\n  SimpleForm,\n  SimpleFormIterator,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  BooleanInput,\n  PasswordInput,\n  TextField,\n  TextInput,\n  ReferenceField,\n  SelectInput,\n  BulkDeleteButton,\n  DeleteButton,\n  SaveButton,\n  regex,\n  useTranslate,\n  Pagination,\n} from \"react-admin\";\nimport { ServerNoticeButton, ServerNoticeBulkButton } from \"./ServerNotices\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  small: {\n    height: \"40px\",\n    width: \"40px\",\n  },\n  large: {\n    height: \"120px\",\n    width: \"120px\",\n    float: \"right\",\n  },\n});\n\nconst UserPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst UserFilter = props => (\n  <Filter {...props}>\n    <BooleanInput source=\"guests\" alwaysOn />\n    <BooleanInput\n      label=\"resources.users.fields.show_deactivated\"\n      source=\"deactivated\"\n      alwaysOn\n    />\n  </Filter>\n);\n\nconst UserBulkActionButtons = props => {\n  const translate = useTranslate();\n  return (\n    <Fragment>\n      <ServerNoticeBulkButton {...props} />\n      <BulkDeleteButton\n        {...props}\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n    </Fragment>\n  );\n};\n\nconst AvatarField = ({ source, className, record = {} }) => (\n  <Avatar src={record[source]} className={className} />\n);\n\nexport const UserList = props => {\n  const classes = useStyles();\n  return (\n    <List\n      {...props}\n      filters={<UserFilter />}\n      filterDefaultValues={{ guests: true, deactivated: false }}\n      bulkActionButtons={<UserBulkActionButtons />}\n      pagination={<UserPagination />}\n    >\n      <Datagrid rowClick=\"edit\">\n        <AvatarField\n          source=\"avatar_src\"\n          sortable={false}\n          className={classes.small}\n        />\n        <TextField source=\"id\" sortable={false} />\n        <TextField source=\"displayname\" sortable={false} />\n        <BooleanField source=\"is_guest\" sortable={false} />\n        <BooleanField source=\"admin\" sortable={false} />\n        <BooleanField source=\"deactivated\" sortable={false} />\n      </Datagrid>\n    </List>\n  );\n};\n\n// https://matrix.org/docs/spec/appendices#user-identifiers\nconst validateUser = regex(\n  /^[a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/][a-z0-9._=\\-/]+/,\n  \"synapseadmin.users.invalid_user_id\"\n);\n\nconst validateEmail = regex(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\\.+([a-zA-Z0-9-][a-zA-Z0-9-]+)*$/,\n  \"Enter Proper Email Address\"  \n);\n\nconst UserEditToolbar = props => {\n  const translate = useTranslate();\n  return (\n    <Toolbar {...props}>\n      <SaveButton submitOnEnter={true} />\n      <DeleteButton\n        label=\"resources.users.action.erase\"\n        title={translate(\"resources.users.helper.erase\")}\n      />\n      <ServerNoticeButton />\n    </Toolbar>\n  );\n};\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" autoComplete=\"off\" validate={validateUser} />\n      <TextInput source=\"displayname\" />\n      <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n      <BooleanInput source=\"admin\" />\n      <TextInput source=\"email\" autoComplete=\"off\" validate={validateEmail}/>\n      <TextInput source=\"msisdn\" autoComplete=\"off\" />\n      {/* <ArrayInput source=\"threepids\">\n        <SimpleFormIterator>\n          <SelectInput\n            source=\"medium\"\n            choices={[\n              { id: \"email\", name: \"resources.users.email\" },\n              { id: \"msisdn\", name: \"resources.users.msisdn\" },\n            ]}\n            key=\"SelectInput\"\n          />\n          <TextInput source=\"address\" key=\"TextInput\"/>\n        </SimpleFormIterator>\n      </ArrayInput> */}\n    </SimpleForm>\n  </Create>\n);\n\nconst UserTitle = ({ record }) => {\n  const translate = useTranslate();\n  return (\n    <span>\n      {translate(\"resources.users.name\", {\n        smart_count: 1,\n      })}{\" \"}\n      {record ? `\"${record.displayname}\"` : \"\"}\n    </span>\n  );\n};\nexport const UserEdit = props => {\n  const classes = useStyles();\n  return (\n    <Edit {...props} title={<UserTitle />}>\n      <TabbedForm toolbar={<UserEditToolbar />}>\n        <FormTab label=\"resources.users.name\" icon={<PersonPinIcon />}>\n          <AvatarField\n            source=\"avatar_src\"\n            sortable={false}\n            className={classes.large}\n          />\n          <TextInput source=\"id\" disabled />\n          <TextInput source=\"displayname\" />\n          <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n          <BooleanInput source=\"admin\" />\n          <BooleanInput\n            source=\"deactivated\"\n            helperText=\"resources.users.helper.deactivate\"\n          />\n          <DateField\n            source=\"creation_ts_ms\"\n            showTime\n            options={{\n              year: \"numeric\",\n              month: \"2-digit\",\n              day: \"2-digit\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              second: \"2-digit\",\n            }}\n          />\n          <TextField source=\"consent_version\" />\n        </FormTab>\n        <FormTab\n          label=\"resources.users.threepid\"\n          icon={<ContactMailIcon />}\n          path=\"threepid\"\n        >\n          <ArrayInput source=\"threepids\">\n            <SimpleFormIterator>\n              <SelectInput\n                source=\"medium\"\n                choices={[\n                  { id: \"email\", name: \"resources.users.email\" },\n                  { id: \"msisdn\", name: \"resources.users.msisdn\" },\n                ]}\n                key=\"SelectInput\"\n              />\n              <TextInput source=\"address\" key=\"TextInput\"/>\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n        <FormTab\n          label=\"resources.connections.name\"\n          icon={<SettingsInputComponentIcon />}\n          path=\"connections\"\n        >\n          <ReferenceField\n            reference=\"connections\"\n            source=\"id\"\n            addLabel={false}\n            link={false}\n          >\n            <ArrayField\n              source=\"devices[].sessions[0].connections\"\n              label=\"resources.connections.name\"\n            >\n              <Datagrid style={{ width: \"100%\" }}>\n                <TextField source=\"ip\" sortable={false} />\n                <DateField\n                  source=\"last_seen\"\n                  showTime\n                  options={{\n                    year: \"numeric\",\n                    month: \"2-digit\",\n                    day: \"2-digit\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    second: \"2-digit\",\n                  }}\n                  sortable={false}\n                />\n                <TextField\n                  source=\"user_agent\"\n                  sortable={false}\n                  style={{ width: \"100%\" }}\n                />\n              </Datagrid>\n            </ArrayField>\n          </ReferenceField>\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  );\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BooleanField,\n  Datagrid,\n  Filter,\n  List,\n  Pagination,\n  SelectField,\n  Show,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useTranslate,\n} from \"react-admin\";\nimport get from \"lodash/get\";\nimport { Tooltip, Typography, Chip } from \"@material-ui/core\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport NoEncryptionIcon from \"@material-ui/icons/NoEncryption\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nconst RoomPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst EncryptionField = ({ source, record = {}, emptyText }) => {\n  const translate = useTranslate();\n  const value = get(record, source);\n  let ariaLabel = value === false ? \"ra.boolean.false\" : \"ra.boolean.true\";\n\n  if (value === false || value === true) {\n    return (\n      <Typography component=\"span\" variant=\"body2\">\n        <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n          {value === true ? (\n            <HttpsIcon data-testid=\"true\" htmlColor=\"limegreen\" />\n          ) : (\n            <NoEncryptionIcon data-testid=\"false\" color=\"error\" />\n          )}\n        </Tooltip>\n      </Typography>\n    );\n  }\n\n  return (\n    <Typography component=\"span\" variant=\"body2\">\n      {emptyText}\n    </Typography>\n  );\n};\n\nconst RoomTitle = ({ record }) => {\n  const translate = useTranslate();\n  var name = \"\";\n  if (record) {\n    name = record.name !== \"\" ? record.name : record.id;\n  }\n\n  return (\n    <span>\n      {translate(\"resources.rooms.name\", 1)} {name}\n    </span>\n  );\n};\n\nexport const RoomShow = props => {\n  const translate = useTranslate();\n  return (\n    <Show {...props} title={<RoomTitle />}>\n      <TabbedShowLayout>\n        <Tab label=\"synapseadmin.rooms.tabs.basic\" icon={<ViewListIcon />}>\n          <TextField source=\"room_id\" />\n          <TextField source=\"name\" />\n          <TextField source=\"canonical_alias\" />\n          <TextField source=\"creator\" />\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.detail\"\n          icon={<PageviewIcon />}\n          path=\"detail\"\n        >\n          <TextField source=\"joined_members\" />\n          <TextField source=\"joined_local_members\" />\n          <TextField source=\"state_events\" />\n          <TextField source=\"version\" />\n          <TextField\n            source=\"encryption\"\n            emptyText={translate(\"resources.rooms.enums.unencrypted\")}\n          />\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.permission\"\n          icon={<VisibilityIcon />}\n          path=\"permission\"\n        >\n          <BooleanField source=\"federatable\" />\n          <BooleanField source=\"public\" />\n          <SelectField\n            source=\"join_rules\"\n            choices={[\n              { id: \"public\", name: \"resources.rooms.enums.join_rules.public\" },\n              { id: \"knock\", name: \"resources.rooms.enums.join_rules.knock\" },\n              { id: \"invite\", name: \"resources.rooms.enums.join_rules.invite\" },\n              {\n                id: \"private\",\n                name: \"resources.rooms.enums.join_rules.private\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"guest_access\"\n            choices={[\n              {\n                id: \"can_join\",\n                name: \"resources.rooms.enums.guest_access.can_join\",\n              },\n              {\n                id: \"forbidden\",\n                name: \"resources.rooms.enums.guest_access.forbidden\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"history_visibility\"\n            choices={[\n              {\n                id: \"invited\",\n                name: \"resources.rooms.enums.history_visibility.invited\",\n              },\n              {\n                id: \"joined\",\n                name: \"resources.rooms.enums.history_visibility.joined\",\n              },\n              {\n                id: \"shared\",\n                name: \"resources.rooms.enums.history_visibility.shared\",\n              },\n              {\n                id: \"world_readable\",\n                name: \"resources.rooms.enums.history_visibility.world_readable\",\n              },\n            ]}\n          />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\nconst RoomFilter = ({ ...props }) => {\n  const translate = useTranslate();\n  return (\n    <Filter {...props}>\n      <Chip\n        label={translate(\"resources.rooms.fields.joined_local_members\")}\n        source=\"joined_local_members\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.state_events\")}\n        source=\"state_events\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.version\")}\n        source=\"version\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.federatable\")}\n        source=\"federatable\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n    </Filter>\n  );\n};\n\nconst FilterableRoomList = ({ ...props }) => {\n  const filter = props.roomfilters;\n  const localMembersFilter =\n    filter && filter.joined_local_members ? true : false;\n  const stateEventsFilter = filter && filter.state_events ? true : false;\n  const versionFilter = filter && filter.version ? true : false;\n  const federateableFilter = filter && filter.federatable ? true : false;\n\n  return (\n    <List\n      {...props}\n      pagination={<RoomPagination />}\n      sort={{ field: \"name\", order: \"ASC\" }}\n      filters={<RoomFilter />}\n    >\n      <Datagrid rowClick=\"show\">\n        <EncryptionField\n          source=\"is_encrypted\"\n          sortBy=\"encryption\"\n          label={<HttpsIcon />}\n        />\n        <TextField source=\"name\" />\n        <TextField source=\"joined_members\" />\n        {localMembersFilter && <TextField source=\"joined_local_members\" />}\n        {stateEventsFilter && <TextField source=\"state_events\" />}\n        {versionFilter && <TextField source=\"version\" />}\n        {federateableFilter && <BooleanField source=\"federatable\" />}\n        <BooleanField source=\"public\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomfilters: state.admin.resources.rooms.list.params.displayedFilters,\n  };\n}\n\nexport const RoomList = connect(mapStateToProps)(FilterableRoomList);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchUtils,\n  FormDataConsumer,\n  Notification,\n  useLogin,\n  useNotify,\n  // useLocale,\n  // useSetLocale,\n  useTranslate,\n  PasswordInput,\n  TextInput,\n} from \"react-admin\";\nimport { Form, useForm } from \"react-final-form\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CircularProgress,\n  // MenuItem,\n  // Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"calc(100vh - 1em)\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    background: \"url(./images/floating-cogs.svg)\",\n    backgroundColor: \"#f9f9f9\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  card: {\n    minWidth: \"30em\",\n    marginTop: \"6em\",\n    marginBottom: \"6em\",\n  },\n  avatar: {\n    margin: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  hint: {\n    marginTop: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.grey[500],\n  },\n  form: {\n    padding: \"0 1em 1em 1em\",\n  },\n  input: {\n    marginTop: \"1em\",\n  },\n  actions: {\n    padding: \"0 1em 1em 1em\",\n  },\n  serverVersion: {\n    color: \"#9e9e9e\",\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    marginBottom: \"1em\",\n    marginLeft: \"0.5em\",\n  },\n}));\n\nconst LoginPage = ({ theme }) => {\n  const classes = useStyles({ theme });\n  const login = useLogin();\n  const notify = useNotify();\n  const [loading, setLoading] = useState(false);\n  // var locale = useLocale();\n  // const setLocale = useSetLocale();\n  const translate = useTranslate();\n  const base_url = \"https://m.navgurukul.org\";\n\n  const renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n  }) => (\n    <TextField\n      error={!!(touched && error)}\n      helperText={touched && error}\n      {...inputProps}\n      {...props}\n      fullWidth\n    />\n  );\n\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = translate(\"ra.validation.required\");\n    }\n    if (!values.password) {\n      errors.password = translate(\"ra.validation.required\");\n    }\n    if (!values.base_url) {\n      errors.base_url = translate(\"ra.validation.required\");\n    } else {\n      if (!values.base_url.match(/^(http|https):\\/\\//)) {\n        errors.base_url = translate(\"synapseadmin.auth.protocol_error\");\n      } else if (\n        !values.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+(:\\d{1,5})?$/)\n      ) {\n        errors.base_url = translate(\"synapseadmin.auth.url_error\");\n      }\n    }\n    return errors;\n  };\n\n  const handleSubmit = auth => {\n    setLoading(true);\n    login(auth).catch(error => {\n      setLoading(false);\n      notify(\n        typeof error === \"string\"\n          ? error\n          : typeof error === \"undefined\" || !error.message\n          ? \"ra.auth.sign_in_error\"\n          : error.message,\n        \"warning\"\n      );\n    });\n  };\n\n  const extractHomeServer = username => {\n    const usernameRegex = /@[a-zA-Z0-9._=\\-/]+:([a-zA-Z0-9\\-.]+\\.[a-zA-Z]+)/;\n    if (!username) return null;\n    const res = username.match(usernameRegex);\n    if (res) return res[1];\n    return null;\n  };\n\n  const UserData = ({ formData }) => {\n\n    const form = useForm();\n    const [serverVersion, setServerVersion] = useState(\"\");\n\n    const handleUsernameChange = _ => {\n      if (formData.base_url) return;\n      // check if username is a full qualified userId then set base_url accordially\n      const home_server = extractHomeServer(formData.username);\n      const wellKnownUrl = `https://${home_server}/.well-known/matrix/client`;\n      if (home_server) {\n        // fetch .well-known entry to get base_url\n        fetchUtils\n          .fetchJson(wellKnownUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            form.change(\"base_url\", json[\"m.homeserver\"].base_url);\n          })\n          .catch(_ => {\n            // if there is no .well-known entry, try the home server name\n            form.change(\"base_url\", `https://${home_server}`);\n          });\n      }\n    };\n\n    useEffect(\n      _ => {\n        if (\n          !formData.base_url ||\n          !formData.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+$/)\n        )\n          return;\n        const versionUrl = `${formData.base_url}/_synapse/admin/v1/server_version`;\n        fetchUtils\n          .fetchJson(versionUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            setServerVersion(\n              `${translate(\"synapseadmin.auth.server_version\")} ${\n                json[\"server_version\"]\n              }`\n            );\n          })\n          .catch(_ => {\n            setServerVersion(\"\");\n          });\n      },\n      [formData.base_url]\n    );\n\n    return (\n      <div>\n        <div className={classes.input}>\n          <TextInput\n            autoFocus\n            name=\"username\"\n            component={renderInput}\n            label={translate(\"ra.auth.username\")}\n            disabled={loading}\n            onBlur={handleUsernameChange}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <PasswordInput\n            name=\"password\"\n            component={renderInput}\n            label={translate(\"ra.auth.password\")}\n            type=\"password\"\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <TextInput\n            name=\"base_url\"\n            component={renderInput}\n            label={translate(\"synapseadmin.auth.base_url\")}\n            disabled={loading}\n            fullWidth\n          />\n        </div>\n        <div className={classes.serverVersion}>{serverVersion}</div>\n      </div>\n    );\n  };\n\n  return (\n    <Form\n      initialValues={{ base_url: base_url }}\n      onSubmit={handleSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className={classes.main}>\n            <Card className={classes.card}>\n              <div className={classes.avatar}>\n                <Avatar className={classes.icon}>\n                  <LockIcon />\n                </Avatar>\n              </div>\n              <div className={classes.hint}>\n                {translate(\"synapseadmin.auth.welcome\")}\n              </div>\n              <div className={classes.form}>\n                <FormDataConsumer>\n                  {formDataProps => <UserData {...formDataProps} />}\n                </FormDataConsumer>\n              </div>\n              <CardActions className={classes.actions}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading}\n                  className={classes.button}\n                  fullWidth\n                >\n                  {loading && <CircularProgress size={25} thickness={2} />}\n                  {translate(\"ra.auth.sign_in\")}\n                </Button>\n              </CardActions>\n            </Card>\n            <Notification />\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default LoginPage;\n","import germanMessages from \"ra-language-german\";\n\nexport default {\n  ...germanMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"Heimserver URL\",\n      welcome: \"Willkommen bei Synapse-admin\",\n      server_version: \"Synapse Version\",\n      username_error: \"Bitte vollständigen Nutzernamen angeben: '@user:domain'\",\n      protocol_error: \"Die URL muss mit 'http://' oder 'https://' beginnen\",\n      url_error: \"Keine gültige Matrix Server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Muss eine vollständige Matrix Benutzer-ID sein, z.B. @benutzer_id:homeserver\",\n    },\n    rooms: {\n      details: \"Raumdetails\",\n      tabs: {\n        basic: \"Allgemein\",\n        members: \"Mitglieder\",\n        detail: \"Details\",\n        permission: \"Berechtigungen\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Zurück zur Liste\",\n      name: \"Benutzer\",\n      email: \"E-Mail\",\n      msisdn: \"Telefon\",\n      threepid: \"E-Mail / Telefon\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"Benutzer-ID\",\n        name: \"Name\",\n        is_guest: \"Gast\",\n        admin: \"Admin\",\n        deactivated: \"Deaktiviert\",\n        guests: \"Zeige Gäste\",\n        show_deactivated: \"Zeige deaktivierte Benutzer\",\n        user_id: \"Suche Benutzer\",\n        displayname: \"Anzeigename\",\n        password: \"Passwort\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Adresse\",\n        creation_ts_ms: \"Zeitpunkt der Erstellung\",\n        consent_version: \"Zugestimmte Geschäftsbedingungen\",\n      },\n      helper: {\n        deactivate: \"Deaktivierte Nutzer können nicht wieder aktiviert werden.\",\n        erase: \"DSGVO konformes Löschen der Benutzerdaten\",\n      },\n      action: {\n        erase: \"Lösche Benutzerdaten\",\n      },\n    },\n    rooms: {\n      name: \"Raum |||| Räume\",\n      fields: {\n        room_id: \"Raum-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Mitglieder\",\n        joined_local_members: \"Lokale Mitglieder\",\n        state_events: \"Ereignisse\",\n        version: \"Version\",\n        is_encrypted: \"Verschlüsselt\",\n        encryption: \"Verschlüsselungs-Algorithmus\",\n        federatable: \"Fö­de­rierbar\",\n        public: \"Öffentlich\",\n        creator: \"Ersteller\",\n        join_rules: \"Beitrittsregeln\",\n        guest_access: \"Gastzugriff\",\n        history_visibility: \"Historie-Sichtbarkeit\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Öffentlich\",\n          knock: \"Auf Anfrage\",\n          invite: \"Nur auf Einladung\",\n          private: \"Privat\",\n        },\n        guest_access: {\n          can_join: \"Gäste können beitreten\",\n          forbidden: \"Gäste können nicht beitreten\",\n        },\n        history_visibility: {\n          invited: \"Ab Einladung\",\n          joined: \"Ab Beitritt\",\n          shared: \"Ab Setzen der Einstellung\",\n          world_readable: \"Jeder\",\n        },\n        unencrypted: \"Nicht verschlüsselt\",\n      },\n    },\n    connections: {\n      name: \"Verbindungen\",\n      fields: {\n        last_seen: \"Datum\",\n        ip: \"IP-Adresse\",\n        user_agent: \"User Agent\",\n      },\n    },\n    servernotices: {\n      name: \"Serverbenachrichtigungen\",\n      send: \"Servernachricht versenden\",\n      fields: {\n        body: \"Nachricht\",\n      },\n      action: {\n        send: \"Sende Nachricht\",\n        send_success: \"Nachricht erfolgreich versendet.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n      helper: {\n        send:\n          'Sendet eine Serverbenachrichtigung an die ausgewählten Nutzer. Hierfür muss das Feature \"Server Notices\" auf dem Server aktiviert sein.',\n      },\n    },\n  },\n  ra: {\n    ...germanMessages.ra,\n    auth: {\n      ...germanMessages.ra.auth,\n      auth_check_error: \"Anmeldung fehlgeschlagen\",\n    },\n    input: {\n      ...germanMessages.ra.input,\n      password: {\n        ...germanMessages.ra.input.password,\n        toggle_hidden: \"Anzeigen\",\n        toggle_visible: \"Verstecken\",\n      },\n    },\n    notification: {\n      ...germanMessages.ra.notifiaction,\n      logged_out: \"Abgemeldet\",\n    },\n  },\n};\n","import React from \"react\";\nimport { Admin, Resource, resolveBrowserLocale } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport authProvider from \"./synapse/authProvider\";\nimport dataProvider from \"./synapse/dataProvider\";\nimport { UserList, UserCreate, UserEdit } from \"./components/users\";\nimport { RoomList, RoomShow } from \"./components/rooms\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport { ViewListIcon as RoomIcon } from \"@material-ui/icons/ViewList\";\nimport germanMessages from \"./i18n/de\";\nimport englishMessages from \"./i18n/en\";\n\n// TODO: Can we use lazy loading together with browser locale?\nconst messages = {\n  de: germanMessages,\n  en: englishMessages,\n};\nconst i18nProvider = polyglotI18nProvider(\n  locale => (messages[locale] ? messages[locale] : messages.en),\n  resolveBrowserLocale()\n);\n\nconst App = () => (\n  <Admin\n    loginPage={LoginPage}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n    i18nProvider={i18nProvider}\n  >\n    <Resource\n      name=\"users\"\n      list={UserList}\n      create={UserCreate}\n      edit={UserEdit}\n      icon={UserIcon}\n    />\n    <Resource name=\"rooms\" list={RoomList} show={RoomShow} icon={RoomIcon} />\n    <Resource name=\"connections\" />\n    <Resource name=\"servernotices\" />\n  </Admin>\n);\n\nexport default App;\n","import englishMessages from \"ra-language-english\";\n\nexport default {\n  ...englishMessages,\n  synapseadmin: {\n    auth: {\n      homeserver: \"Homeserver\",\n      welcome: \"Welcome to Navgurukul Admin\",\n      base_url: \"Homeserver URL\",\n      username_error: \"Please enter fully qualified user ID: '@user:domain'\",\n      protocol_error: \"URL has to start with 'http://' or 'https://'\",\n      url_error: \"Not a valid Matrix server URL\",\n    },\n    users: {\n      invalid_user_id:\n        \"Please enter a proper username.\",\n    },\n    rooms: {\n      tabs: {\n        basic: \"Basic\",\n        members: \"Members\",\n        detail: \"Details\",\n        permission: \"Permissions\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      backtolist: \"Back to list\",\n      name: \"User |||| Users\",\n      email: \"Email\",\n      msisdn: \"Phone\",\n      threepid: \"Email / Phone\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"User-ID\",\n        name: \"Name\",\n        is_guest: \"Guest\",\n        admin: \"Admin\",\n        deactivated: \"Deactivated\",\n        guests: \"Show guests\",\n        show_deactivated: \"Show deactivated members\",\n        user_id: \"Search Member\",\n        displayname: \"Displayname\",\n        password: \"Password\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Address\",\n        creation_ts_ms: \"Creation timestamp\",\n        consent_version: \"Consent version\",\n      },\n      helper: {\n        deactivate: \"Deactivated members cannot be reactivated\",\n        erase: \"Mark the member as GDPR-erased\",\n      },\n      action: {\n        erase: \"Erase member data\",\n      },\n    },\n    rooms: {\n      name: \"Room |||| Rooms\",\n      fields: {\n        room_id: \"Room-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Members\",\n        joined_local_members: \"local members\",\n        state_events: \"State events\",\n        version: \"Version\",\n        is_encrypted: \"Encrypted\",\n        encryption: \"Encryption\",\n        federatable: \"Federatable\",\n        public: \"Public\",\n        creator: \"Creator\",\n        join_rules: \"Join rules\",\n        guest_access: \"Guest access\",\n        history_visibility: \"History visibility\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Public\",\n          knock: \"Knock\",\n          invite: \"Invite\",\n          private: \"Private\",\n        },\n        guest_access: {\n          can_join: \"Guests can join\",\n          forbidden: \"Guests can not join\",\n        },\n        history_visibility: {\n          invited: \"Since invited\",\n          joined: \"Since joined\",\n          shared: \"Since shared\",\n          world_readable: \"Anyone\",\n        },\n        unencrypted: \"Unencrypted\",\n      },\n    },\n    connections: {\n      name: \"Connections\",\n      fields: {\n        last_seen: \"Date\",\n        ip: \"IP address\",\n        user_agent: \"User agent\",\n      },\n    },\n    servernotices: {\n      name: \"Server Notices\",\n      send: \"Send server notices\",\n      fields: {\n        body: \"Message\",\n      },\n      action: {\n        send: \"Send note\",\n        send_success: \"Server notice successfully sent.\",\n        send_failure: \"An error has occurred.\",\n      },\n      helper: {\n        send:\n          'Sends a server notice to the selected users. The feature \"Server Notices\" has to be activated at the server.',\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}